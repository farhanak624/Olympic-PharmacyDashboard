import { useEffect, useState } from "react";
import Card from "./CardsTopOrder";
import ChartOrder from "./ChartOrder";
import { useNavigate } from "react-router-dom";
import OrderDetailModal from "./OrderDetailModal";
import { useDispatch } from "react-redux";
import { getOrders } from "../../../Api/AdminApi";
import { getOrderStatics } from "../../../Api/VendorApi";
import { loadSpinner } from "../../../Redux/Features/NavbarSlice";

const OrdersPage = () => {
  const dispatch = useDispatch();
  const [status, setStatus] = useState("exchanged");
  const [orderData, setOrderData] = useState([]);
  const [graphData, setGraphData] = useState([]);
  const [cardsData, setCardsData] = useState(null);
  const [totalCount, setTotalCount] = useState(0);
  const [page, setPage] = useState(1);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedOrder, setSelectedOrder] = useState("");
  const [selected, setselected] = useState("Weekly");
  const [dropdown, setdropdown] = useState(false);

  // const loader = useRef(null);

  const navigate = useNavigate();

  useEffect(() => {
    orders();
  }, [status, page]);

  useEffect(() => {
    orderStatics();
  }, [selected]);

  // console.log("page: ", page)

  const orders = () => {
    dispatch(loadSpinner());
    getOrders(status, page)
      .then((data) => {
        console.log("getOrders: ", data.data);

        const orderDatas = data.data.orderDatas;
        if (Array.isArray(orderDatas)) {
          const formattedOrders = orderDatas.map((order) => ({
            ...order,
            orderDate: formatDate(order.date),
            // productName: capitalizeEachWord(order.productName)
          }));
          setOrderData((prevData) => [...prevData, ...formattedOrders]); // Append new data to existing data
          setTotalCount(data?.data?.totalCount);
          dispatch(loadSpinner());
        } else {
          console.log("No orders found or data is not in expected format");
          // dispatch(loadSpinner());
        }
      })
      .catch((error) => {
        console.log("error occurred in get orders: ", error);
      })
      .finally(() => {
        // dispatch(loadSpinner());
      });
  };

  const handleScroll = () => {
    // Detect when user has scrolled to the bottom
    const { scrollTop, scrollHeight, clientHeight } =
      document.documentElement || document.body;

    // Detect when user has scrolled to the bottom
    if (scrollTop + clientHeight >= scrollHeight - 5) {
      // If all data is not fetched yet
      if (orderData.length < totalCount) {
        setPage((prevPage) => prevPage + 1); // Increment page number to fetch next set of data
      }
    }
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, [orderData, totalCount]); // Re-add scroll event listener when orderData or totalCount changes

  const handleStatusChange = (newStatus) => {
    setStatus(newStatus);
    setPage(1);
    setOrderData([]);
  };

  const orderStatics = () => {
    getOrderStatics(selected).then((data) => {
      console.log("getOrderStatics: ", data.data);
      const {
        newOrder,
        deliverdOrders,
        pendingOrders,
        cancelledOrders,
        graphDatas,
      } = data.data;
      setCardsData({
        newOrder,
        deliverdOrders,
        pendingOrders,
        cancelledOrders,
      });
      // console.log('cardsData', cardsData)
      setGraphData(graphDatas);
    });
  };

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    const day = date.getDate();
    const month = date.getMonth() + 1; // Months are zero-based
    const year = date.getFullYear();

    // Ensure leading zeros for day and month if needed
    const formattedDay = day < 10 ? "0" + day : day;
    const formattedMonth = month < 10 ? "0" + month : month;

    return `${formattedDay}-${formattedMonth}-${year}`;
  };

  // Function to capitalize the first letter of each word
  const capitalizeEachWord = (str) => {
    return str.replace(/\b\w/g, (char) => char.toUpperCase());
  };

  const handleButtonClick = (order) => {
    // Show the invoice only if the button is displaying "Download"
    if (status === "Pending") {
      navigate("/invoice", { state: { order: order } });
    }
  };

  // const handleButtonClick = () => {
  //   // Show the invoice only if the button is displaying "Download"
  //   if (selectedHeading === 'pending') {
  //     window.open('/invoice', '_blank');
  //   }
  // };

  const handleRowClick = (id) => {
    console.log("selectedOrderid: ", id);
    setSelectedOrder(id);
    setIsModalOpen(true);
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
    setSelectedOrder("");
  };

  const getDisplayValue = (value) => {
    return value !== undefined && value !== null ? value : "N/A";
  };

  return (
    <div>
      <h1 className="font-bold">Orders</h1>
      <div
        className="p-1 mb-4 w-36 ml-auto relative flex justify-between min-w-[15%] items-center rounded-lg"
        style={{ backgroundColor: "rgba(0, 0, 0, 0.05)" }}
        onClick={() => setdropdown(!dropdown)}
      >
        <p>{selected}</p>

        <svg
          width="10"
          height="6"
          viewBox="0 0 10 6"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0.375076 1.70711L3.96086 5.29289C4.35139 5.68342 4.98455 5.68342 5.37508 5.29289L8.96086 1.70711C9.59083 1.07714 9.14466 0 8.25376 0H1.08218C0.191278 0 -0.254888 1.07714 0.375076 1.70711Z"
            fill="black"
          />
        </svg>

        {dropdown && (
          <ul
            style={{ backgroundColor: "rgba(0, 0, 0, 0.5)" }}
            className="absolute hover:cursor-pointer top-9 w-full bg-black text-white rounded-md left-0 z-40"
          >
            <li
              className="p-1 flex justify-center"
              onClick={() => setselected("Yearly")}
            >
              Yearly
            </li>
            <li
              className="p-1 flex justify-center"
              onClick={() => setselected("Monthly")}
            >
              Monthly
            </li>
            <li
              className="p-1 flex justify-center"
              onClick={() => setselected("Weekly")}
            >
              Weekly
            </li>
          </ul>
        )}
      </div>
      <div className="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5 mt-4">
        <Card
          color={"#E4F7FF"}
          icon={
            <svg
              width="24"
              height="28"
              viewBox="0 0 24 28"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8.09079 10.6312L18.5989 4.14101L23.1519 6.52157L12.2868 13.0234L8.09079 10.6312ZM23.6247 6.23864L23.6228 6.23977L23.6247 6.23864ZM16.3789 2.98099L5.95958 9.41616L0.8464 6.50088L11.711 0.542164L11.8864 0.634788L11.8878 0.633396L16.3789 2.98099ZM11.2214 14.7429V27.0824L0.5 20.9857V8.71145L5.36718 11.4499V14.7885C5.36718 15.3779 5.84147 15.8665 6.43907 15.8665C7.03607 15.8665 7.50963 15.3772 7.50963 14.7885V12.6552L11.2214 14.7429ZM23.5 8.73905V20.4151L13.3636 27.0733V14.8152L23.5 8.73905Z"
                stroke="black"
              />
            </svg>
          }
          data={cardsData ? cardsData.newOrder : 0}
          text={"New Orders"}
          bgcolor={"#F2FBFF"}
        />
        <Card
          color={"#E5DFFF"}
          icon={
            <svg
              width="36"
              height="23"
              viewBox="0 0 36 23"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M27.4767 16.7561C28.002 16.4059 28.6194 16.2195 29.2507 16.2203C30.0953 16.2215 30.9049 16.5575 31.5021 17.1547C32.0993 17.7519 32.4353 18.5615 32.4365 19.4061C32.4373 20.0374 32.2509 20.6548 31.9006 21.1801C31.5504 21.7053 31.0523 22.1149 30.4692 22.3569C29.8861 22.5989 29.2443 22.6624 28.6251 22.5395C28.0058 22.4165 27.437 22.1126 26.9906 21.6662C26.5442 21.2198 26.2403 20.651 26.1173 20.0317C25.9944 19.4125 26.0579 18.7707 26.2999 18.1876C26.5419 17.6045 26.9515 17.1064 27.4767 16.7561ZM28.0252 21.0825C28.3694 21.3125 28.7741 21.4352 29.188 21.4352C29.7431 21.4352 30.2754 21.2147 30.6679 20.8222C31.0604 20.4297 31.2809 19.8974 31.2809 19.3423C31.2809 18.9284 31.1581 18.5237 30.9282 18.1796C30.6982 17.8354 30.3713 17.5671 29.9889 17.4087C29.6065 17.2503 29.1857 17.2089 28.7797 17.2896C28.3737 17.3704 28.0008 17.5697 27.7081 17.8624C27.4154 18.1551 27.2161 18.528 27.1353 18.934C27.0545 19.34 27.096 19.7608 27.2544 20.1432C27.4128 20.5257 27.6811 20.8525 28.0252 21.0825Z"
                stroke="black"
                stroke-width="0.8"
              />
              <path
                d="M5.9572 16.7561C6.48247 16.4059 7.09984 16.2195 7.73116 16.2203C8.57573 16.2215 9.38538 16.5575 9.98259 17.1547C10.5798 17.7519 10.9158 18.5615 10.9169 19.4061C10.9178 20.0374 10.7313 20.6548 10.3811 21.1801C10.0309 21.7053 9.53273 22.1149 8.94963 22.3569C8.36654 22.5989 7.72476 22.6624 7.10553 22.5395C6.48631 22.4165 5.91749 22.1126 5.47108 21.6662C5.02468 21.2198 4.72076 20.651 4.59781 20.0317C4.47485 19.4125 4.53839 18.7707 4.78038 18.1876C5.02237 17.6045 5.43192 17.1064 5.9572 16.7561ZM6.50084 21.0825C6.84501 21.3125 7.24965 21.4352 7.66359 21.4352C8.21866 21.4352 8.751 21.2147 9.14349 20.8222C9.53599 20.4297 9.75649 19.8974 9.75649 19.3423C9.75649 18.9284 9.63375 18.5237 9.40377 18.1796C9.1738 17.8354 8.84694 17.5671 8.46451 17.4087C8.08208 17.2503 7.66127 17.2089 7.25529 17.2896C6.8493 17.3704 6.47639 17.5697 6.18369 17.8624C5.89099 18.1551 5.69166 18.528 5.61091 18.934C5.53015 19.34 5.5716 19.7608 5.73 20.1432C5.88841 20.5257 6.15666 20.8525 6.50084 21.0825Z"
                stroke="black"
                stroke-width="0.8"
              />
              <path
                d="M35.2758 11.3801L35.276 11.3805C35.4597 11.7182 35.5551 12.0969 35.5532 12.4813V12.4833V17.3479C35.5532 17.411 35.5408 17.4735 35.5167 17.5318C35.4925 17.5901 35.4571 17.6431 35.4125 17.6877C35.3679 17.7323 35.3149 17.7677 35.2566 17.7919C35.1983 17.816 35.1358 17.8284 35.0727 17.8284H34.2268C33.9785 17.0444 33.5486 16.3283 32.9701 15.7395C32.3181 15.0758 31.5011 14.5979 30.603 14.3549C29.705 14.1119 28.7584 14.1125 27.8607 14.3568C27.2553 14.5216 26.6869 14.7931 26.1813 15.1563V5.75169H30.1108V5.75171L30.1141 5.75168C30.748 5.7465 31.3713 5.91398 31.9172 6.23616C32.4632 6.55833 32.9111 7.02305 33.213 7.58047L33.2132 7.58083L35.2758 11.3801ZM26.8406 9.8515V10.2527L30.6459 6.44624V6.04624H30.6455H27.2406H26.8406V6.44624V9.8515Z"
                stroke="black"
                stroke-width="0.8"
              />
              <path
                d="M1.3767 15.9085H1.7767V15.5085V0.4H22.2553C22.6864 0.401155 23.0994 0.573177 23.4039 0.878372C23.7084 1.18367 23.8795 1.59731 23.8795 2.02856V17.6479H12.5889C12.2644 16.689 11.6611 15.8459 10.853 15.2285C9.96308 14.5485 8.87421 14.1802 7.75426 14.1802C6.6343 14.1802 5.54544 14.5485 4.6555 15.2285C3.84743 15.8459 3.24411 16.689 2.91957 17.6479H1.26967C1.03902 17.6479 0.817818 17.5562 0.654723 17.3931C0.491626 17.23 0.4 17.0088 0.4 16.7782C0.4 16.5475 0.491626 16.3263 0.654722 16.1632C0.817818 16.0001 1.03902 15.9085 1.26967 15.9085H1.3767ZM11.2316 12.6437L11.5145 12.927L11.7975 12.6439L18.7345 5.70693L19.0173 5.42409L18.7345 5.14125L17.3578 3.76455L17.0749 3.48171L16.7921 3.76455L11.5149 9.04172L9.40436 6.92686L9.12151 6.64344L8.83838 6.92657L7.46169 8.30327L7.17903 8.58593L7.4615 8.86878L11.2316 12.6437Z"
                stroke="black"
                stroke-width="0.8"
              />
            </svg>
          }
          data={cardsData ? cardsData.deliverdOrders : 0}
          text={"Delivered Orders"}
          bgcolor={"#F2EFFF"}
        />
        <Card
          color={"#FFF3D3"}
          icon={
            <svg
              width="28"
              height="28"
              viewBox="0 0 28 28"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.5651 2.62834L25.565 2.62836L25.5675 2.6383L27.2591 9.43377C27.3185 9.7081 27.0676 9.94388 26.8116 9.88363C26.8113 9.88356 26.811 9.88349 26.8107 9.88342L19.9826 8.22016L19.9826 8.2201L19.9751 8.21838C19.7201 8.16045 19.6177 7.82059 19.8091 7.62916L21.4146 6.02367L21.7935 5.64485L21.3894 5.29304C16.9052 1.38841 10.0974 1.50648 5.82028 5.78362C1.36337 10.2405 1.36338 17.5036 5.78987 21.9606L5.797 21.9677L5.80441 21.9746L6.21308 22.3541L6.21305 22.3541L6.21785 22.3585C6.63139 22.7326 6.66381 23.3508 6.29953 23.7537C6.10245 23.9702 5.8284 24.0857 5.56083 24.0857C5.33415 24.0857 5.1141 24.0146 4.9254 23.8543C4.81416 23.726 4.67675 23.596 4.56182 23.4873C4.51051 23.4387 4.46368 23.3944 4.42565 23.3564C-0.808366 18.1224 -0.808551 9.6238 4.4251 4.38955C9.48942 -0.64619 17.5654 -0.788178 22.8287 3.94033L23.1812 4.25708L23.5164 3.92194L24.9759 2.46241C25.1673 2.27098 25.5072 2.3734 25.5651 2.62834Z"
                stroke="black"
              />
              <path
                d="M18.5161 15.6375L18.5184 15.6389C18.9885 15.9327 19.1068 16.5181 18.8108 16.9435L18.8038 16.9536L18.7972 16.9641C18.6004 17.2791 18.2969 17.4297 17.966 17.4297C17.8041 17.4297 17.604 17.3724 17.4444 17.2731L13.3594 14.6762L13.3595 14.6761L13.3484 14.6694C13.0692 14.5019 12.8906 14.1731 12.8906 13.843V7.59615C12.8906 7.05495 13.3382 6.60742 13.8793 6.60742C14.4205 6.60742 14.8681 7.05495 14.8681 7.59615V13.0548V13.3302L15.1008 13.4774L18.5161 15.6375Z"
                stroke="black"
              />
              <path
                d="M10.8996 24.8887L10.9121 24.8926L10.9247 24.8959C11.4474 25.0314 11.7406 25.569 11.594 26.0455L11.5908 26.0558L11.5881 26.0663C11.4724 26.5096 11.0645 26.8018 10.6415 26.8018C10.5893 26.8018 10.493 26.7858 10.3833 26.7583C10.1459 26.699 9.9397 26.6469 9.73705 26.5709L9.72294 26.5656L9.70853 26.5612C9.22452 26.4122 8.92555 25.8575 9.10173 25.329L9.10185 25.329L9.10527 25.3179C9.2542 24.8339 9.80895 24.5349 10.3375 24.7111L10.3375 24.7112L10.345 24.7135L10.8996 24.8887Z"
                stroke="black"
              />
              <path
                d="M16.1709 25.0501L16.1793 25.0488L16.1878 25.0472C16.7047 24.9515 17.2358 25.2987 17.3578 25.8216C17.4503 26.3688 17.1281 26.8578 16.5943 26.9816C16.4725 26.9976 16.3472 27.0197 16.2349 27.0396L16.2287 27.0407C16.102 27.063 15.9907 27.0825 15.8887 27.0953L15.8396 27.1014L15.7934 27.1168C15.7928 27.117 15.788 27.1181 15.7778 27.119C15.7629 27.1204 15.7473 27.1206 15.7172 27.1206C15.2746 27.1206 14.8336 26.7576 14.7521 26.2614C14.6758 25.7119 15.0481 25.2146 15.5836 25.1381L15.5836 25.1382L15.5871 25.1376L16.1709 25.0501Z"
                stroke="black"
              />
              <path
                d="M20.9557 22.855L20.9557 22.8551L20.9614 22.8507C21.4067 22.5066 22.0345 22.596 22.3178 23.0033L22.3289 23.0193L22.3412 23.0344C22.6882 23.4585 22.6085 24.0996 22.189 24.4238L22.1817 24.4295L22.1746 24.4354C22.0183 24.5656 21.8325 24.6988 21.6274 24.8454C21.446 24.9647 21.2523 25.02 21.0644 25.02C20.7612 25.02 20.4461 24.8667 20.247 24.5898C19.9322 24.1344 20.0411 23.5171 20.4742 23.2158L20.4815 23.2107L20.4886 23.2053L20.9557 22.855Z"
                stroke="black"
              />
            </svg>
          }
          data={cardsData ? cardsData.pendingOrders : 0}
          text={"Pending Orders"}
          bgcolor={"#FFFBF1"}
        />
        <Card
          color={"#FFDCD1"}
          icon={
            <svg
              width="30"
              height="31"
              viewBox="0 0 30 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M7.37121 18.1295C7.60056 17.9001 7.7294 17.5891 7.7294 17.2647V12.0155L12.5129 14.4073V28.0907L0.5 22.4946V8.40081L5.28352 10.7926V17.2647C5.28352 17.5891 5.41237 17.9001 5.64171 18.1295C5.87106 18.3588 6.18212 18.4877 6.50646 18.4877C6.83081 18.4877 7.14186 18.3588 7.37121 18.1295Z"
                stroke="black"
              />
              <path
                d="M12.4153 5.35005L12.4153 5.35007L6.47194 8.65233L2.00683 6.41977L13.7318 0.55896L17.5795 2.48142L12.4153 5.35005Z"
                stroke="black"
              />
              <path
                d="M26.8709 29.2861L26.6885 28.8206L26.8709 29.2861C27.0278 29.2246 27.1704 29.1314 27.2895 29.0122C27.4087 28.893 27.502 28.7505 27.5635 28.5936L27.0979 28.4112L27.5635 28.5936C27.625 28.4366 27.6533 28.2687 27.6468 28.1003C27.6403 27.9318 27.5991 27.7666 27.5257 27.6148C27.4555 27.4698 27.3574 27.3401 27.237 27.2332L26.3071 26.3007L27.2491 25.3561L27.2625 25.3426L27.2748 25.3282C27.4752 25.0943 27.5799 24.7933 27.568 24.4856C27.5561 24.1778 27.4285 23.8858 27.2107 23.668L26.8571 24.0216L27.2107 23.668C26.9929 23.4502 26.7009 23.3226 26.3931 23.3107C26.0854 23.2988 25.7844 23.4035 25.5505 23.6039L25.5361 23.6162L25.5226 23.6296L24.578 24.5716L23.6334 23.6296L23.62 23.6162L23.6056 23.6039C23.3716 23.4035 23.0707 23.2988 22.7629 23.3107C22.4551 23.3226 22.1632 23.4502 21.9454 23.668C21.7275 23.8858 21.6 24.1778 21.5881 24.4856C21.5762 24.7933 21.6809 25.0943 21.8812 25.3282L21.8936 25.3426L21.9069 25.3561L22.8489 26.3007L21.9069 27.2453L21.8936 27.2587L21.8812 27.2731C21.6809 27.5071 21.5762 27.808 21.5881 28.1158C21.6 28.4236 21.7275 28.7155 21.9454 28.9333C22.1632 29.1511 22.4551 29.2787 22.7629 29.2906C23.0707 29.3025 23.3716 29.1978 23.6056 28.9975L23.62 28.9851L23.6334 28.9717L24.578 28.0298L25.5105 28.9597C25.6175 29.08 25.7471 29.1782 25.8922 29.2483C26.0439 29.3217 26.2092 29.363 26.3776 29.3695C26.546 29.376 26.714 29.3476 26.8709 29.2861ZM22.2451 22.8092C22.9357 22.3478 23.7475 22.1016 24.578 22.1016C25.6917 22.1016 26.7598 22.544 27.5472 23.3315C28.3347 24.1189 28.7771 25.187 28.7771 26.3007C28.7771 27.1312 28.5309 27.943 28.0695 28.6336C27.608 29.3241 26.9522 29.8623 26.1849 30.1801C25.4177 30.498 24.5734 30.5811 23.7588 30.4191C22.9443 30.2571 22.1961 29.8572 21.6088 29.2699C21.0215 28.6826 20.6216 27.9344 20.4596 27.1199C20.2976 26.3053 20.3807 25.461 20.6985 24.6937C21.0164 23.9265 21.5546 23.2706 22.2451 22.8092Z"
                stroke="black"
              />
              <path
                d="M13.4022 7.6049L13.4026 7.60467L20.2421 3.80727L25.4697 6.41957L13.7451 12.2803L9.13745 9.97792L13.4022 7.6049Z"
                stroke="black"
              />
              <path
                d="M24.5719 19.6565C22.8097 19.6566 21.1197 20.3567 19.8736 21.6028C18.6274 22.849 17.9273 24.5391 17.9273 26.3015L17.9274 26.3049C17.9283 26.436 17.9329 26.567 17.9413 26.6978L14.9512 28.0907V14.4073L26.9641 8.40081V20.1009C26.2033 19.8067 25.3923 19.6552 24.5719 19.6565ZM24.5719 19.6565C24.5721 19.6565 24.5722 19.6565 24.5723 19.6565V20.1565L24.5715 19.6565C24.5717 19.6565 24.5718 19.6565 24.5719 19.6565Z"
                stroke="black"
              />
            </svg>
          }
          data={cardsData ? cardsData.cancelledOrders : 0}
          text={"Cancelled Orders"}
          bgcolor={"#FFECE6"}
        />
      </div>

      {/* graph data */}
      <div className="mt-10 gap-3 bg-containerWhite w-full p-4 rounded-lg shadow-sm">
        <ChartOrder graphData={graphData} />
      </div>

      {/* table */}
      <div className="mt-10 gap-3 bg-containerWhite w-full p-4 rounded-lg shadow-sm">
        <div className="card">
          <div className="card-body">
            <div className="table-responsive">
              <div className="flex justify-between pb-5 cursor-pointer">
                <div>
                  <h2
                    className={`font-bold ${
                      status === "exchanged"
                        ? "text-navblue"
                        : " text-textColor"
                    }`}
                    onClick={() => handleStatusChange("exchanged")}
                  >
                    Exchange Orders
                  </h2>
                  <div
                    className={`border-b-4 border-navblue text-navblue w-12 ${
                      status === "exchanged" ? "block" : "hidden"
                    }`}
                  />
                </div>
                <div>
                  <h2
                    className={`font-bold ${
                      status === "Pending" ? "text-navblue" : "text-textColor"
                    }`}
                    onClick={() => handleStatusChange("Pending")}
                  >
                    Pending Orders
                  </h2>
                  <div
                    className={`border-b-4 border-navblue text-navblue w-12 ${
                      status === "Pending" ? "block" : "hidden"
                    }`}
                  />
                </div>
                <div>
                  <h2
                    className={`font-bold ${
                      status === "Delivered" ? "text-navblue" : "text-textColor"
                    }`}
                    onClick={() => handleStatusChange("Delivered")}
                  >
                    Delivered Orders
                  </h2>
                  <div
                    className={`border-b-4 border-navblue text-navblue w-14 ${
                      status === "Delivered" ? "block" : "hidden"
                    }`}
                  />
                </div>
                <div>
                  <h2
                    className={`font-bold ${
                      status === "Returned" ? "text-navblue" : "text-textColor"
                    }`}
                    onClick={() => handleStatusChange("Returned")}
                  >
                    Return Orders
                  </h2>
                  <div
                    className={`border-b-4 border-navblue text-navblue w-10 ${
                      status === "Returned" ? "block" : "hidden"
                    }`}
                  />
                </div>
                <div>
                  <h2
                    className={`font-bold ${
                      status === "Cancelled" ? "text-navblue" : "text-textColor"
                    }`}
                    onClick={() => handleStatusChange("Cancelled")}
                  >
                    Cancelled Orders
                  </h2>
                  <div
                    className={`border-b-4 border-navblue text-navblue w-12 ${
                      status === "Cancelled" ? "block" : "hidden"
                    }`}
                  />
                </div>
              </div>
              <table className="table align-middle table-nowrap mb-0 w-full">
                <thead>
                  <tr>
                    <th className="text-center">
                      <div className="flex items-center justify-center font-normal">
                        <div className="mr-1 p-1">
                          <svg
                            width="16"
                            height="17"
                            viewBox="0 0 16 17"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M15.4896 4.09025C15.3264 3.69319 15.1248 3.31042 14.89 2.95236C14.6575 2.59814 14.3902 2.26479 14.0963 1.96165C13.8019 1.6585 13.4781 1.38392 13.134 1.14448C12.7863 0.902842 12.4145 0.694705 12.0288 0.526658C11.2265 0.177383 10.3747 0 9.49667 0C8.61867 0 7.7668 0.177383 6.96454 0.526658C6.57888 0.694705 6.20709 0.902292 5.8593 1.14448C5.51525 1.38392 5.19146 1.65905 4.89702 1.96165C4.60257 2.26479 4.33586 2.59814 4.10329 2.95236C3.86859 3.31042 3.66643 3.69319 3.50373 4.09025C3.16448 4.9162 2.99219 5.79323 2.99219 6.69662C2.99219 7.60056 3.16448 8.47759 3.50373 9.30355C3.66696 9.7006 3.86859 10.0834 4.10329 10.4414C4.33586 10.7962 4.60311 11.129 4.89702 11.4321C5.19146 11.7353 5.51525 12.0099 5.8593 12.2499C6.20709 12.4915 6.57888 12.6996 6.96454 12.8677C7.7668 13.217 8.61867 13.3943 9.49667 13.3943C10.3747 13.3943 11.2265 13.217 12.0288 12.8677C12.4145 12.6996 12.7863 12.4921 13.134 12.2499C13.4781 12.0104 13.8019 11.7353 14.0963 11.4321C14.3908 11.129 14.6575 10.7957 14.89 10.4414C15.1248 10.0834 15.3269 9.7006 15.4896 9.30355C15.8289 8.47759 16.0012 7.60056 16.0012 6.69662C16.0012 5.79323 15.8289 4.9162 15.4896 4.09025ZM9.49614 12.2965C6.49674 12.2965 4.05689 9.78463 4.05689 6.69662C4.05689 3.60917 6.49674 1.0967 9.49614 1.0967C12.4955 1.0967 14.9354 3.60862 14.9354 6.69662C14.9354 9.78463 12.4955 12.2965 9.49614 12.2965Z"
                              fill="#ffdd11"
                            />
                            <path
                              d="M3.24024 12.3618L0.156024 15.5371C-0.0520081 15.7513 -0.0520081 16.0984 0.156024 16.3126C0.260041 16.4196 0.396595 16.4729 0.532616 16.4729C0.668638 16.4729 0.805192 16.4196 0.909209 16.3126L3.99342 13.1372C4.20146 12.9231 4.20146 12.576 3.99342 12.3618C3.78593 12.1476 3.44827 12.1476 3.24024 12.3618Z"
                              fill="#ffdd11"
                            />
                            <path
                              d="M6.4782 3.77734C6.18375 3.77734 5.94531 4.02282 5.94531 4.32597V9.13014C5.94531 9.43328 6.18375 9.67876 6.4782 9.67876C6.77264 9.67876 7.01108 9.43328 7.01108 9.13014V4.32597C7.01108 4.02282 6.77211 3.77734 6.4782 3.77734Z"
                              fill="#ffdd11"
                            />
                            <path
                              d="M8.46648 3.77734C8.17203 3.77734 7.93359 4.02282 7.93359 4.32597V9.13014C7.93359 9.43328 8.17203 9.67876 8.46648 9.67876C8.76092 9.67876 8.99936 9.43328 8.99936 9.13014V4.32597C8.99883 4.02282 8.76039 3.77734 8.46648 3.77734Z"
                              fill="#ffdd11"
                            />
                            <path
                              d="M12.4509 3.77734C12.1564 3.77734 11.918 4.02282 11.918 4.32597V9.13014C11.918 9.43328 12.1564 9.67876 12.4509 9.67876C12.7453 9.67876 12.9837 9.43328 12.9837 9.13014V4.32597C12.9837 4.02282 12.7453 3.77734 12.4509 3.77734Z"
                              fill="#ffdd11"
                            />
                            <path
                              d="M10.4587 3.77734C10.1642 3.77734 9.92578 4.02282 9.92578 4.32597V9.13014C9.92578 9.43328 10.1642 9.67876 10.4587 9.67876C10.7531 9.67876 10.9915 9.43328 10.9915 9.13014V4.32597C10.9915 4.02282 10.7531 3.77734 10.4587 3.77734Z"
                              fill="#ffdd11"
                            />
                          </svg>
                        </div>
                        Order Id
                      </div>
                    </th>
                    <th className="text-center">
                      <div className="flex items-center justify-center font-normal">
                        <div className="mr-1 p-1">
                          <svg
                            width="16"
                            height="16"
                            viewBox="0 0 16 16"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.3333 1.73961H14.2266C15.206 1.73961 16 2.51766 16 3.47405V13.922C16 14.8799 15.2066 15.6565 14.2266 15.6565H1.77341C0.793983 15.6565 0 14.8784 0 13.922V3.47405C0 2.51615 0.793442 1.73961 1.77341 1.73961H2.66667V0.42662C2.66667 0.191004 2.87283 0 3.11111 0C3.35657 0 3.55556 0.187058 3.55556 0.42662V1.73961H12.4444V0.42662C12.4444 0.191004 12.6506 0 12.8889 0C13.1343 0 13.3333 0.187058 13.3333 0.42662V1.73961ZM13.3333 2.60941V3.0526C13.3333 3.28821 13.1272 3.47922 12.8889 3.47922C12.6434 3.47922 12.4444 3.29216 12.4444 3.0526V2.60941H3.55556V3.0526C3.55556 3.28821 3.34939 3.47922 3.11111 3.47922C2.86565 3.47922 2.66667 3.29216 2.66667 3.0526V2.60941H1.77341C1.28449 2.60941 0.888889 2.9964 0.888889 3.47405V13.922C0.888889 14.3986 1.28546 14.7867 1.77341 14.7867H14.2266C14.7155 14.7867 15.1111 14.3997 15.1111 13.922V3.47405C15.1111 2.9975 14.7145 2.60941 14.2266 2.60941H13.3333ZM0.888889 4.34902H15.1111V5.21883H0.888889V4.34902ZM11.5556 7.39741C11.5556 7.15497 11.7458 6.95844 12.0042 6.95844H12.8847C13.1325 6.95844 13.3333 7.14461 13.3333 7.39741V8.25907C13.3333 8.50151 13.1431 8.69805 12.8847 8.69805H12.0042C11.7564 8.69805 11.5556 8.51188 11.5556 8.25907V7.39741ZM7.11111 7.39741C7.11111 7.15497 7.30136 6.95844 7.55972 6.95844H8.44028C8.68804 6.95844 8.88889 7.14461 8.88889 7.39741V8.25907C8.88889 8.50151 8.69864 8.69805 8.44028 8.69805H7.55972C7.31196 8.69805 7.11111 8.51188 7.11111 8.25907V7.39741ZM2.66667 7.39741C2.66667 7.15497 2.85692 6.95844 3.11528 6.95844H3.99584C4.2436 6.95844 4.44444 7.14461 4.44444 7.39741V8.25907C4.44444 8.50151 4.25419 8.69805 3.99584 8.69805H3.11528C2.86752 8.69805 2.66667 8.51188 2.66667 8.25907V7.39741ZM2.66667 11.7464C2.66667 11.504 2.85692 11.3075 3.11528 11.3075H3.99584C4.2436 11.3075 4.44444 11.4936 4.44444 11.7464V12.6081C4.44444 12.8505 4.25419 13.0471 3.99584 13.0471H3.11528C2.86752 13.0471 2.66667 12.8609 2.66667 12.6081V11.7464ZM7.11111 11.7464C7.11111 11.504 7.30136 11.3075 7.55972 11.3075H8.44028C8.68804 11.3075 8.88889 11.4936 8.88889 11.7464V12.6081C8.88889 12.8505 8.69864 13.0471 8.44028 13.0471H7.55972C7.31196 13.0471 7.11111 12.8609 7.11111 12.6081V11.7464ZM11.5556 11.7464C11.5556 11.504 11.7458 11.3075 12.0042 11.3075H12.8847C13.1325 11.3075 13.3333 11.4936 13.3333 11.7464V12.6081C13.3333 12.8505 13.1431 13.0471 12.8847 13.0471H12.0042C11.7564 13.0471 11.5556 12.8609 11.5556 12.6081V11.7464Z"
                              fill="#DB3022"
                            />
                          </svg>
                        </div>
                        Order Date
                      </div>
                    </th>
                    <th className="text-center">
                      <div className="flex items-center justify-center font-normal">
                        <div className="mr-1 p-1">
                          <svg
                            width="14"
                            height="17"
                            viewBox="0 0 14 17"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.8859 4.07247L7.11407 0.0315976C7.04356 -0.0105325 6.95661 -0.0105325 6.88593 0.0315976L0.114066 4.07247C0.043562 4.1146 0 4.19235 0 4.27661V12.3584C0 12.4426 0.0433871 12.5204 0.114066 12.5625L6.88593 16.6034C6.92127 16.6245 6.96064 16.635 7 16.635C7.03936 16.635 7.07873 16.6245 7.11407 16.6034L13.8859 12.5625C13.9564 12.5204 14 12.4426 14 12.3584V4.27661C14 4.19235 13.9564 4.1146 13.8859 4.07247ZM7 8.04518L5.03586 6.87313L11.3516 3.10456L13.3156 4.27661L7 8.04518ZM2.87631 6.12907L4.35164 7.00946V9.4964L2.87631 8.61601V6.12907ZM3.10444 5.72079L9.42022 1.95222L10.8956 2.83262L4.57978 6.601L3.10444 5.72079ZM7 0.507867L8.96396 1.67973L2.64836 5.44848L0.684395 4.27643L7 0.507867ZM0.456263 4.68489L2.42022 5.85694V8.75217C2.42022 8.83643 2.46361 8.91418 2.53429 8.95631L4.46571 10.1088C4.50105 10.1298 4.54041 10.1405 4.57978 10.1405C4.61914 10.1405 4.6585 10.13 4.69384 10.1088C4.76435 10.0667 4.80791 9.98895 4.80791 9.90469V7.28159L6.77204 8.45364V15.9911L0.456263 12.2222V4.68489ZM7.22813 15.9909V8.45346L13.5437 4.68489V12.2224L7.22813 15.9909Z"
                              fill="#00D67B"
                            />
                          </svg>
                        </div>
                        Total Price
                      </div>
                    </th>
                    <th className="text-center">
                      <div className="flex items-center justify-center font-normal">
                        <div className="mr-1 p-1">
                          <svg
                            width="21"
                            height="18"
                            viewBox="0 0 21 18"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g opacity="0.4">
                              <path
                                d="M16.6154 1.03846C16.6154 0.463846 16.1515 0 15.5769 0H10.7308H6.57692H1.03846C0.463846 0 0 0.463846 0 1.03846V16.2692C0 16.8438 0.463846 17.3077 1.03846 17.3077H11.1392C11.2846 17.7092 11.6654 18 12.1154 18H19.0385C19.6131 18 20.0769 17.5362 20.0769 16.9615V10.0385C20.0769 9.46385 19.6131 9 19.0385 9H16.6154V1.03846ZM6.92308 0.692308H10.3846V2.07692H6.92308V0.692308ZM6.92308 2.76923H10.3846V5.04692L10.2808 4.94308C10.1423 4.80462 9.92769 4.80462 9.78923 4.94308L9.34615 5.39308L8.89615 4.94308C8.83385 4.88077 8.74385 4.84615 8.65385 4.84615C8.56385 4.84615 8.47385 4.88077 8.41154 4.95L7.96154 5.39308L7.51154 4.94308C7.37308 4.80462 7.15846 4.80462 7.02 4.94308L6.91615 5.04692V2.76923H6.92308ZM11.0769 10.0385V16.6154H1.03846C0.844615 16.6154 0.692308 16.4631 0.692308 16.2692V1.03846C0.692308 0.844615 0.844615 0.692308 1.03846 0.692308H6.23077V5.88462C6.23077 6.02308 6.31385 6.14769 6.44538 6.20308C6.57692 6.25846 6.72231 6.22385 6.81923 6.12692L7.26923 5.68385L7.71923 6.13385C7.85769 6.27231 8.07231 6.27231 8.21077 6.13385L8.65385 5.68385L9.10385 6.13385C9.24231 6.27231 9.45692 6.27231 9.59539 6.13385L10.0385 5.68385L10.4885 6.13385C10.5508 6.19615 10.6408 6.23077 10.7308 6.23077C10.7723 6.23077 10.8208 6.22385 10.8623 6.20308C10.9938 6.14769 11.0769 6.02308 11.0769 5.88462V0.692308H15.5769C15.7708 0.692308 15.9231 0.844615 15.9231 1.03846V9H12.1154C11.5408 9 11.0769 9.46385 11.0769 10.0385ZM19.0385 9.69231C19.2323 9.69231 19.3846 9.84462 19.3846 10.0385V16.9615C19.3846 17.1554 19.2323 17.3077 19.0385 17.3077H12.1154C11.9215 17.3077 11.7692 17.1554 11.7692 16.9615V10.0385C11.7692 9.84462 11.9215 9.69231 12.1154 9.69231H19.0385Z"
                                fill="#FF9900"
                              />
                              <path
                                d="M14.1938 15.2309C14 15.2309 13.8477 15.3832 13.8477 15.5771C13.8477 15.7709 14 15.9232 14.1938 15.9232H15.2323V16.2694C15.2323 16.4632 15.3846 16.6155 15.5784 16.6155C15.7723 16.6155 15.9246 16.4632 15.9246 16.2694V15.9232C16.6861 15.9232 17.3092 15.3002 17.3092 14.5386C17.3092 13.7771 16.6861 13.154 15.9246 13.154V11.7694H16.963C17.1569 11.7694 17.3092 11.6171 17.3092 11.4232C17.3092 11.2294 17.1569 11.0771 16.963 11.0771H15.9246V10.7309C15.9246 10.5371 15.7723 10.3848 15.5784 10.3848C15.3846 10.3848 15.2323 10.5371 15.2323 10.7309V11.0771C14.4707 11.0771 13.8477 11.7002 13.8477 12.4617C13.8477 13.2232 14.4707 13.8463 15.2323 13.8463V15.2309H14.1938ZM15.9246 13.8463C16.3053 13.8463 16.6169 14.1578 16.6169 14.5386C16.6169 14.9194 16.3053 15.2309 15.9246 15.2309V13.8463ZM14.54 12.4617C14.54 12.0809 14.8515 11.7694 15.2323 11.7694V13.154C14.8515 13.154 14.54 12.8425 14.54 12.4617Z"
                                fill="#FF9900"
                              />
                            </g>
                          </svg>
                        </div>
                        Total Discount
                      </div>
                    </th>
                    <th className="text-center">
                      <div className="flex items-center justify-center font-normal">
                        <div className="mr-1 p-1">
                          <svg
                            width="21"
                            height="18"
                            viewBox="0 0 21 18"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g opacity="0.4">
                              <path
                                d="M16.6154 1.03846C16.6154 0.463846 16.1515 0 15.5769 0H10.7308H6.57692H1.03846C0.463846 0 0 0.463846 0 1.03846V16.2692C0 16.8438 0.463846 17.3077 1.03846 17.3077H11.1392C11.2846 17.7092 11.6654 18 12.1154 18H19.0385C19.6131 18 20.0769 17.5362 20.0769 16.9615V10.0385C20.0769 9.46385 19.6131 9 19.0385 9H16.6154V1.03846ZM6.92308 0.692308H10.3846V2.07692H6.92308V0.692308ZM6.92308 2.76923H10.3846V5.04692L10.2808 4.94308C10.1423 4.80462 9.92769 4.80462 9.78923 4.94308L9.34615 5.39308L8.89615 4.94308C8.83385 4.88077 8.74385 4.84615 8.65385 4.84615C8.56385 4.84615 8.47385 4.88077 8.41154 4.95L7.96154 5.39308L7.51154 4.94308C7.37308 4.80462 7.15846 4.80462 7.02 4.94308L6.91615 5.04692V2.76923H6.92308ZM11.0769 10.0385V16.6154H1.03846C0.844615 16.6154 0.692308 16.4631 0.692308 16.2692V1.03846C0.692308 0.844615 0.844615 0.692308 1.03846 0.692308H6.23077V5.88462C6.23077 6.02308 6.31385 6.14769 6.44538 6.20308C6.57692 6.25846 6.72231 6.22385 6.81923 6.12692L7.26923 5.68385L7.71923 6.13385C7.85769 6.27231 8.07231 6.27231 8.21077 6.13385L8.65385 5.68385L9.10385 6.13385C9.24231 6.27231 9.45692 6.27231 9.59539 6.13385L10.0385 5.68385L10.4885 6.13385C10.5508 6.19615 10.6408 6.23077 10.7308 6.23077C10.7723 6.23077 10.8208 6.22385 10.8623 6.20308C10.9938 6.14769 11.0769 6.02308 11.0769 5.88462V0.692308H15.5769C15.7708 0.692308 15.9231 0.844615 15.9231 1.03846V9H12.1154C11.5408 9 11.0769 9.46385 11.0769 10.0385ZM19.0385 9.69231C19.2323 9.69231 19.3846 9.84462 19.3846 10.0385V16.9615C19.3846 17.1554 19.2323 17.3077 19.0385 17.3077H12.1154C11.9215 17.3077 11.7692 17.1554 11.7692 16.9615V10.0385C11.7692 9.84462 11.9215 9.69231 12.1154 9.69231H19.0385Z"
                                fill="#FF9900"
                              />
                              <path
                                d="M14.1938 15.2309C14 15.2309 13.8477 15.3832 13.8477 15.5771C13.8477 15.7709 14 15.9232 14.1938 15.9232H15.2323V16.2694C15.2323 16.4632 15.3846 16.6155 15.5784 16.6155C15.7723 16.6155 15.9246 16.4632 15.9246 16.2694V15.9232C16.6861 15.9232 17.3092 15.3002 17.3092 14.5386C17.3092 13.7771 16.6861 13.154 15.9246 13.154V11.7694H16.963C17.1569 11.7694 17.3092 11.6171 17.3092 11.4232C17.3092 11.2294 17.1569 11.0771 16.963 11.0771H15.9246V10.7309C15.9246 10.5371 15.7723 10.3848 15.5784 10.3848C15.3846 10.3848 15.2323 10.5371 15.2323 10.7309V11.0771C14.4707 11.0771 13.8477 11.7002 13.8477 12.4617C13.8477 13.2232 14.4707 13.8463 15.2323 13.8463V15.2309H14.1938ZM15.9246 13.8463C16.3053 13.8463 16.6169 14.1578 16.6169 14.5386C16.6169 14.9194 16.3053 15.2309 15.9246 15.2309V13.8463ZM14.54 12.4617C14.54 12.0809 14.8515 11.7694 15.2323 11.7694V13.154C14.8515 13.154 14.54 12.8425 14.54 12.4617Z"
                                fill="#FF9900"
                              />
                            </g>
                          </svg>
                        </div>
                        Sub Discount
                      </div>
                    </th>
                    <th className="text-center"></th>
                  </tr>
                </thead>
                <tbody>
                  {orderData.length === 0 ? (
                    <tr>
                      <td colSpan="5" className="text-center py-3">
                        No data found
                      </td>
                    </tr>
                  ) : (
                    orderData.map((order, index) => (
                      <tr
                        key={index}
                        className="border-b border-gray-200 cursor-pointer"
                        onClick={() => handleRowClick(order.orderId)}
                      >
                        <td className="text-sm text-center py-3">
                          {getDisplayValue(order.orderId)}
                        </td>
                        <td className="text-sm text-center py-3">
                          {getDisplayValue(order.orderDate)}
                        </td>
                        <td className="text-center text-sm py-3">
                          {getDisplayValue(order.totalPrice)} AED
                        </td>
                        <td className="text-sm text-center py-3">
                          {getDisplayValue(order.totalDiscount)} AED
                        </td>
                        <td className="text-sm text-center py-3">
                          {getDisplayValue(order.totalSubTotal)} AED
                        </td>
                      </tr>
                    ))
                  )}

                  {orderData.length < totalCount && (
                    <tr>
                      <td colSpan="5" className="text-center">
                        {" "}
                        {/* Assuming 4 columns in total */}
                        <div className="flex justify-center items-center">
                          <Loading className="text-center w-100 h-106" />
                        </div>
                      </td>
                    </tr>
                  )}
                </tbody>

                {/* {orderData.length < totalCount && <p>Loading...</p>} */}
              </table>

              {isModalOpen && (
                <OrderDetailModal
                  handleCloseModal={handleCloseModal}
                  id={selectedOrder}
                />
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OrdersPage;
