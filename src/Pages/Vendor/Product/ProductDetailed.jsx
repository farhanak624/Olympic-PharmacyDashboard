import React, { useState, useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import ReactCountryFlag from "react-country-flag";
import { useDispatch } from "react-redux";
import Swal from "sweetalert2";
import { Rating } from "@mui/material";
import { loadSpinner } from "../../../Redux/Features/NavbarSlice";
import { deleteProduct, productOverview } from "../../../Api/VendorApi";
import MyVectorMap from "../../../Components/Graphs/mapGraph/Mapgraph";
import CardsTop from "../../../Components/Card/CardsTop";
import LineChartProductSale from "../../../Components/Lineareachart/LineChartProductSale";
import { countryAlpha2List } from "../../../Utils/utils";
import { styled } from "@mui/system";

const ProductDetailed = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const dispatch = useDispatch();
  const { productDetails } = location.state || {};
  const [selected, setselected] = useState(new Date().getFullYear());
  const [totalSales, setTotalSales] = useState();
  const [totalFavourites, setTotalFavourites] = useState();
  const [cancelledOrders, setCancelledOrders] = useState();
  const [totalViews, setTotalViews] = useState();
  const [productBrand, setProductBrand] = useState("");
  const [salesAnalysis, setSalesAnalysis] = useState({});
  const [topSelledCountry, setTopSelledCountry] = useState([]);
  const [topViewedCountry, setTopViewedCountry] = useState([]);
  const [productData, setProductData] = useState();
  const [productReviewDatas, setProductReviewDatas] = useState();
  const [Ratings, setRatings] = useState(0);
  const [reviewsList, setReviewsList] = useState([]);
  useEffect(() => {
    if (productDetails) {
      setProductData(productDetails);
    }
  }, [productDetails]);

  useEffect(() => {
    if (productData?._id) {
      getProductDetail(productData?._id, selected);
    }
  }, [productData, selected]);

  const getProductDetail = (prodId, year) => {
    dispatch(loadSpinner());
    console.log("productDetails", prodId, year);
    productOverview(prodId, year)
      .then((data) => {
        console.log("productDetails", data?.data);
        setTopSelledCountry(data?.data?.topSelledCountry);
        setTopViewedCountry(data?.data?.topViewedCountry);
        setTotalSales(data?.data?.totalSales);
        setTotalFavourites(data?.data?.totalFavorites);
        setCancelledOrders(data?.data?.cancelOrders);
        setTotalViews(data?.data?.totalViewers);
        setProductReviewDatas(data?.data?.product);
        setProductBrand(data?.data?.product?.brand);
        setSalesAnalysis(data?.data?.salesAnalysis);
        setRatings(data?.data?.product?.ratings?.average);
        setReviewsList(data?.data?.product?.reviews);
      })
      .catch((err) => {
        console.log(err);
      })
      .finally(() => {
        dispatch(loadSpinner());
      });
  };
  const countryCodeMap = countryAlpha2List?.reduce((acc, country) => {
    acc[country?.name] = country?.code;
    return acc;
  }, {});
  // console.log("countryCodeMap", countryCodeMap);

  //
  const data = {
    // heading:"",
    // count:'',
    price: totalSales,
  };
  const data1 = {
    // heading:"",
    // count:'',
    price: cancelledOrders,
  };
  const data2 = {
    // heading:"",
    // count:'',
    price: totalFavourites,
  };
  const data3 = {
    // heading:"",
    // count:'',
    price: totalViews,
  };
  return (
    <>
      <div className="w-full justify-between bg-containerWhite rounded-lg mb-3 md:p-1 relative">
        <div className="flex">
          <img
            className="w-32 h-32 md:w-32 md:h-32 rounded-lg p-1 mr-4"
            src={productData?.images[0]}
            alt=""
          />

          <div className="flex w-full p-3 items-center justify-between">
            <div className="md:mr-4">
              <p className="font-semibold text-xl text-textColor text-transform: capitalize">
                {productData?.productName}
              </p>
              <p className="text-transform: capitalize text-textColor">
                {productBrand}
              </p>
            </div>
            <div>
              <div className="md:flex flex-col items-end ">
                <div className="flex items-center mb-2">
                  {productData?.ratings?.average === 0 ? (
                    ""
                  ) : (
                    <svg
                      className="fill-current text-yellow-500 w-4 h-4 md:w-5 md:h-5 mr-2"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                    >
                      <path d="M10 15l-5.878 3.09 1.123-6.545-4.751-4.635 6.564-.954L10 0l2.942 6.561 6.564.954-4.751 4.635 1.123 6.545z" />
                    </svg>
                  )}

                  <p className="text-zinc-400 leading-none ">
                    {productData?.ratings?.average === 0
                      ? ""
                      : productData?.ratings?.average?.toFixed(0)}
                  </p>
                </div>

                <div className="flex flex-col ">
                  <span className="text-textColor font-bold text-sm">
                    {productData?.currency}{" "}
                    {productData?.discountPrice?.toFixed(0)}
                  </span>
                  <span className="text-textColor line-through text-sm">
                    {productData?.price === productData?.discountPrice
                      ? ""
                      : productData?.currency}{" "}
                    {""}
                    {productData?.price === productData?.discountPrice
                      ? ""
                      : productData?.price?.toFixed(0)}
                  </span>
                </div>
              </div>
            </div>
          </div>
          <div className="absolute top-auto right-0 mt-2 mr-2">
            {/* Place your edit icon here */}
            <button
              onClick={() => {
                navigate("/vendor/editProduct", {
                  state: { productDetails: productData },
                });
              }}
            >
              <svg
                width="52"
                height="52"
                viewBox="0 0 52 52"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g filter="url(#filter0_d_1770_15462)">
                  <circle cx="26" cy="26" r="20" fill="#FAFAFC" />
                </g>
                <path
                  d="M18.7852 33.2187C18.7586 33.2183 18.7324 33.2126 18.7081 33.2019C18.6837 33.1911 18.6618 33.1756 18.6436 33.1563C18.6254 33.1369 18.6113 33.1141 18.6021 33.0891C18.5929 33.0642 18.5888 33.0377 18.5901 33.0111L18.7977 29.6568C18.7994 29.609 18.8195 29.5637 18.8539 29.5304L30.0593 18.3249C30.2679 18.1168 30.5506 18 30.8452 18C31.1399 18 31.4225 18.1168 31.6311 18.3249L33.4838 20.1855C33.6915 20.3943 33.8081 20.6768 33.8081 20.9714C33.8081 21.2659 33.6915 21.5484 33.4838 21.7573L22.2784 32.9549C22.2449 32.989 22.1997 33.009 22.152 33.0111L18.7977 33.2187H18.7852ZM19.1816 29.7536L18.9928 32.8144L22.0536 32.6271L33.2076 21.4732C33.3424 21.3375 33.418 21.154 33.418 20.9628C33.418 20.7715 33.3424 20.5881 33.2076 20.4524L31.3564 18.6012C31.2207 18.4664 31.0372 18.3908 30.846 18.3908C30.6547 18.3908 30.4713 18.4664 30.3356 18.6012L19.1816 29.7536Z"
                  fill="black"
                />
                <path
                  d="M20.6384 31.3595C20.5998 31.3598 20.5618 31.3487 20.5295 31.3275C20.4972 31.3063 20.4718 31.2759 20.4568 31.2403C20.4417 31.2047 20.4376 31.1654 20.4449 31.1274C20.4523 31.0894 20.4707 31.0545 20.498 31.027L30.1613 21.3668C30.1794 21.3486 30.201 21.3343 30.2247 21.3244C30.2484 21.3146 30.2738 21.3096 30.2994 21.3096C30.3251 21.3096 30.3505 21.3146 30.3742 21.3244C30.3979 21.3343 30.4194 21.3486 30.4376 21.3668C30.4557 21.3849 30.4701 21.4065 30.4799 21.4302C30.4897 21.4539 30.4948 21.4793 30.4948 21.5049C30.4948 21.5306 30.4897 21.556 30.4799 21.5797C30.4701 21.6034 30.4557 21.6249 30.4376 21.6431L20.7774 31.3033C20.7401 31.3393 20.6903 31.3595 20.6384 31.3595Z"
                  fill="black"
                />
                <path
                  d="M31.8677 23.2729C31.8159 23.2729 31.7661 23.2528 31.7288 23.2168L28.5805 20.0669C28.5474 20.0297 28.5298 19.9811 28.5313 19.9313C28.5329 19.8815 28.5534 19.8341 28.5888 19.7989C28.6241 19.7638 28.6716 19.7435 28.7215 19.7422C28.7713 19.741 28.8197 19.7589 28.8568 19.7922L32.0051 22.9405C32.0321 22.9678 32.0505 23.0024 32.0579 23.0401C32.0654 23.0778 32.0615 23.1168 32.0468 23.1523C32.0322 23.1878 32.0073 23.2182 31.9755 23.2397C31.9436 23.2611 31.9061 23.2727 31.8677 23.2729Z"
                  fill="black"
                />
                <path
                  d="M22.2113 32.9351C22.1857 32.9353 22.1603 32.9303 22.1367 32.9203C22.113 32.9104 22.0917 32.8958 22.0739 32.8773L18.9241 29.7291C18.906 29.711 18.8917 29.6896 18.882 29.666C18.8722 29.6425 18.8672 29.6172 18.8672 29.5917C18.8672 29.5662 18.8722 29.5409 18.882 29.5174C18.8917 29.4938 18.906 29.4724 18.9241 29.4544C18.9421 29.4363 18.9635 29.422 18.9871 29.4122C19.0107 29.4025 19.0359 29.3975 19.0614 29.3975C19.0869 29.3975 19.1122 29.4025 19.1358 29.4122C19.1593 29.422 19.1808 29.4363 19.1988 29.4544L22.3471 32.6026C22.3652 32.6206 22.3796 32.642 22.3894 32.6656C22.3992 32.6892 22.4042 32.7144 22.4042 32.74C22.4042 32.7655 22.3992 32.7908 22.3894 32.8144C22.3796 32.8379 22.3652 32.8593 22.3471 32.8773C22.3295 32.8956 22.3084 32.9101 22.285 32.92C22.2617 32.9299 22.2366 32.9351 22.2113 32.9351Z"
                  fill="black"
                />
                <path
                  d="M18.1945 33.8043C18.1689 33.8045 18.1435 33.7995 18.1199 33.7895C18.0963 33.7796 18.075 33.765 18.0572 33.7465C18.0391 33.7286 18.0247 33.7072 18.0149 33.6836C18.0051 33.66 18 33.6347 18 33.6092C18 33.5837 18.0051 33.5584 18.0149 33.5348C18.0247 33.5112 18.0391 33.4898 18.0572 33.4718L18.6441 32.8834C18.6622 32.8652 18.6837 32.8509 18.7075 32.841C18.7312 32.8312 18.7566 32.8262 18.7822 32.8262C18.8079 32.8262 18.8333 32.8312 18.857 32.841C18.8807 32.8509 18.9022 32.8652 18.9203 32.8834C18.9385 32.9015 18.9529 32.9231 18.9627 32.9468C18.9725 32.9705 18.9776 32.9959 18.9776 33.0215C18.9776 33.0472 18.9725 33.0726 18.9627 33.0963C18.9529 33.12 18.9385 33.1415 18.9203 33.1597L18.3319 33.7465C18.3141 33.765 18.2928 33.7796 18.2692 33.7895C18.2455 33.7995 18.2202 33.8045 18.1945 33.8043Z"
                  fill="black"
                />
                <path
                  d="M28.9272 34.0006H23.035C22.9832 34.0006 22.9336 33.98 22.897 33.9434C22.8604 33.9068 22.8398 33.8572 22.8398 33.8055C22.8398 33.7537 22.8604 33.7041 22.897 33.6675C22.9336 33.6309 22.9832 33.6104 23.035 33.6104H28.9272C28.979 33.6104 29.0286 33.6309 29.0652 33.6675C29.1018 33.7041 29.1223 33.7537 29.1223 33.8055C29.1223 33.8572 29.1018 33.9068 29.0652 33.9434C29.0286 33.98 28.979 34.0006 28.9272 34.0006Z"
                  fill="black"
                />
                <defs>
                  <filter
                    id="filter0_d_1770_15462"
                    x="0"
                    y="0"
                    width="52"
                    height="52"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                  >
                    <feFlood flood-opacity="0" result="BackgroundImageFix" />
                    <feColorMatrix
                      in="SourceAlpha"
                      type="matrix"
                      values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                      result="hardAlpha"
                    />
                    <feOffset />
                    <feGaussianBlur stdDeviation="3" />
                    <feComposite in2="hardAlpha" operator="out" />
                    <feColorMatrix
                      type="matrix"
                      values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"
                    />
                    <feBlend
                      mode="normal"
                      in2="BackgroundImageFix"
                      result="effect1_dropShadow_1770_15462"
                    />
                    <feBlend
                      mode="normal"
                      in="SourceGraphic"
                      in2="effect1_dropShadow_1770_15462"
                      result="shape"
                    />
                  </filter>
                </defs>
              </svg>
            </button>
          </div>
          <div className="absolte top-0 right-2 mt-2 mr-14">
            <button>
              <svg
                width="52"
                height="52"
                viewBox="0 0 52 52"
                onClick={(e) => {
                  e.stopPropagation(); // Prevent click from bubbling to the card div
                  Swal.fire({
                    title: "Are you sure?",
                    text: "You want to delete this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!",
                  }).then((result) => {
                    if (result.isConfirmed) {
                      // If confirmed, perform the delete operation
                      // You can place your delete logic here
                      deleteProduct(productData?._id)
                        .then((data) => {
                          console.log("success", data?.data);
                          if (result.isConfirmed) {
                          }
                          navigate("/vendor/AllProducts");
                        })
                        .catch((err) => {
                          console.log(err?.response?.data);
                        });
                      Swal.fire(
                        "Deleted!",
                        "Your file has been deleted.",
                        "success"
                      );
                      // For demonstration purposes, let's just log the deletion
                      console.log("Item deleted");
                    }
                  });
                }}
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g filter="url(#filter0_d_1770_15461)">
                  <circle cx="26" cy="26" r="20" fill="#FF7266" />
                </g>
                <path
                  d="M20.9385 19.7505H23.6172V18.4201C23.6172 18.1751 23.7934 18 24.0402 18C24.0402 18 24.0402 18 24.0754 18L28.3402 18.035C28.5516 18.035 28.7279 18.2101 28.7279 18.4201V19.7505H31.2656H32.9574C33.1689 19.7505 33.3451 19.9606 33.3451 20.1707C33.3451 20.3807 33.1689 20.5558 32.9574 20.5558H31.8295V33.0197C31.8295 33.2648 31.7238 33.5098 31.5475 33.7199C31.3713 33.895 31.1246 34 30.8426 34H21.5377C21.2557 34 21.009 33.895 20.8328 33.7199C20.6566 33.5098 20.5156 33.2648 20.5156 33.0197V20.5558H19.423C19.1762 20.5558 19 20.3807 19 20.1707C19 19.9606 19.1762 19.7505 19.423 19.7505H20.5156H20.9385ZM24.4279 19.7505H27.9172V18.8053H24.4279V19.7505ZM28.9393 30.3939C28.9393 30.6039 28.7631 30.779 28.5516 30.779C28.3402 30.779 28.1639 30.6039 28.1639 30.3939V23.3567C28.1639 23.1466 28.3402 22.9716 28.5516 22.9716C28.7631 22.9716 28.9393 23.1466 28.9393 23.3567V30.3939ZM26.5779 30.3939C26.5779 30.6039 26.4016 30.779 26.1902 30.779C25.9434 30.779 25.7672 30.6039 25.7672 30.3939V23.3567C25.7672 23.1466 25.9434 22.9716 26.1902 22.9716C26.4016 22.9716 26.5779 23.1466 26.5779 23.3567V30.3939ZM24.2164 30.3939C24.2164 30.6039 24.0402 30.779 23.7934 30.779C23.582 30.779 23.4057 30.6039 23.4057 30.3939V23.3567C23.4057 23.1466 23.582 22.9716 23.7934 22.9716C24.0402 22.9716 24.2164 23.1466 24.2164 23.3567V30.3939ZM31.0541 20.5558H24.0402H21.3262V33.0197C21.3262 33.0547 21.3262 33.1247 21.3967 33.1597C21.432 33.1947 21.4672 33.1947 21.5377 33.1947H30.8426C30.8779 33.1947 30.9484 33.1947 30.9836 33.1597C31.0189 33.1247 31.0541 33.0547 31.0541 33.0197V20.5558Z"
                  fill="white"
                />
                <defs>
                  <filter
                    id="filter0_d_1770_15461"
                    x="0"
                    y="0"
                    width="52"
                    height="52"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                  >
                    <feFlood flood-opacity="0" result="BackgroundImageFix" />
                    <feColorMatrix
                      in="SourceAlpha"
                      type="matrix"
                      values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                      result="hardAlpha"
                    />
                    <feOffset />
                    <feGaussianBlur stdDeviation="3" />
                    <feComposite in2="hardAlpha" operator="out" />
                    <feColorMatrix
                      type="matrix"
                      values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"
                    />
                    <feBlend
                      mode="normal"
                      in2="BackgroundImageFix"
                      result="effect1_dropShadow_1770_15461"
                    />
                    <feBlend
                      mode="normal"
                      in="SourceGraphic"
                      in2="effect1_dropShadow_1770_15461"
                      result="shape"
                    />
                  </filter>
                </defs>
              </svg>
            </button>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5">
        <CardsTop
          color={"rgba(240, 251, 235, 1)"}
          icon={
            <svg
              width="18"
              height="17"
              viewBox="0 0 18 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16.2644 14.4891C16.2945 14.4891 16.3193 14.5138 16.3193 14.544V15.309C16.3193 15.3395 16.2944 15.3641 16.2644 15.3641H0.255089C0.224753 15.3641 0.2 15.3394 0.2 15.309V14.544C0.2 14.5139 0.22465 14.4891 0.255089 14.4891H16.2644Z"
                stroke="black"
                stroke-width="0.4"
              />
              <path
                d="M15.5466 13.957L15.5466 13.957L15.547 13.9568C15.5488 13.9556 15.5509 13.9556 15.5527 13.9565L15.5529 13.9566L17.4816 14.9208C17.2633 15.03 16.9685 15.1774 16.6649 15.3292C16.2499 15.5367 15.8185 15.7524 15.5438 15.8897V15.8886V15.8857V15.8828V15.8798V15.8769V15.8739V15.8709V15.8679V15.8649V15.8619V15.8589V15.8558V15.8528V15.8497V15.8467V15.8436V15.8405V15.8374V15.8343V15.8312V15.8281V15.825V15.8218V15.8187V15.8155V15.8124V15.8092V15.806V15.8028V15.7996V15.7964V15.7932V15.79V15.7867V15.7835V15.7802V15.7769V15.7737V15.7704V15.7671V15.7638V15.7605V15.7572V15.7538V15.7505V15.7471V15.7438V15.7404V15.7371V15.7337V15.7303V15.7269V15.7235V15.7201V15.7167V15.7132V15.7098V15.7064V15.7029V15.6994V15.696V15.6925V15.689V15.6855V15.682V15.6785V15.675V15.6715V15.6679V15.6644V15.6609V15.6573V15.6538V15.6502V15.6466V15.643V15.6394V15.6358V15.6322V15.6286V15.625V15.6214V15.6177V15.6141V15.6105V15.6068V15.6031V15.5995V15.5958V15.5921V15.5884V15.5847V15.581V15.5773V15.5736V15.5699V15.5662V15.5624V15.5587V15.555V15.5512V15.5474V15.5437V15.5399V15.5361V15.5324V15.5286V15.5248V15.521V15.5172V15.5133V15.5095V15.5057V15.5019V15.498V15.4942V15.4903V15.4865V15.4826V15.4788V15.4749V15.471V15.4671V15.4633V15.4594V15.4555V15.4516V15.4477V15.4437V15.4398V15.4359V15.432V15.428V15.4241V15.4202V15.4162V15.4123V15.4083V15.4043V15.4004V15.3964V15.3924V15.3884V15.3845V15.3805V15.3765V15.3725V15.3685V15.3645V15.3605V15.3564V15.3524V15.3484V15.3444V15.3403V15.3363V15.3323V15.3282V15.3242V15.3201V15.3161V15.312V15.3079V15.3039V15.2998V15.2957V15.2916V15.2876V15.2835V15.2794V15.2753V15.2712V15.2671V15.263V15.2589V15.2548V15.2507V15.2465V15.2424V15.2383V15.2342V15.23V15.2259V15.2218V15.2176V15.2135V15.2094V15.2052V15.2011V15.1969V15.1928V15.1886V15.1844V15.1803V15.1761V15.1719V15.1678V15.1636V15.1594V15.1553V15.1511V15.1469V15.1427V15.1385V15.1343V15.1302V15.126V15.1218V15.1176V15.1134V15.1092V15.105V15.1008V15.0966V15.0924V15.0882V15.0839V15.0797V15.0755V15.0713V15.0671V15.0629V15.0587V15.0544V15.0502V15.046V15.0418V15.0376V15.0333V15.0291V15.0249V15.0207V15.0164V15.0122V15.008V15.0037V14.9995V14.9953V14.991V14.9868V14.9826V14.9783V14.9741V14.9698V14.9656V14.9614V14.9571V14.9529V14.9487V14.9444V14.9402V14.9359V14.9317V14.9275V14.9232V14.919V14.9147V14.9105V14.9063V14.902V14.8978V14.8935V14.8893V14.8851V14.8808V14.8766V14.8724V14.8681V14.8639V14.8596V14.8554V14.8512V14.8469V14.8427V14.8385V14.8342V14.83V14.8258V14.8215V14.8173V14.8131V14.8089V14.8046V14.8004V14.7962V14.792V14.7878V14.7835V14.7793V14.7751V14.7709V14.7667V14.7625V14.7582V14.754V14.7498V14.7456V14.7414V14.7372V14.733V14.7288V14.7246V14.7204V14.7162V14.712V14.7079V14.7037V14.6995V14.6953V14.6911V14.6869V14.6828V14.6786V14.6744V14.6702V14.6661V14.6619V14.6577V14.6536V14.6494V14.6453V14.6411V14.637V14.6328V14.6287V14.6245V14.6204V14.6163V14.6121V14.608V14.6039V14.5998V14.5956V14.5915V14.5874V14.5833V14.5792V14.5751V14.571V14.5669V14.5628V14.5587V14.5546V14.5505V14.5465V14.5424V14.5383V14.5342V14.5302V14.5261V14.5221V14.518V14.514V14.5099V14.5059V14.5018V14.4978V14.4938V14.4897V14.4857V14.4817V14.4777V14.4737V14.4697V14.4657V14.4617V14.4577V14.4537V14.4497V14.4458V14.4418V14.4378V14.4339V14.4299V14.4259V14.422V14.418V14.4141V14.4102V14.4062V14.4023V14.3984V14.3945V14.3906V14.3867V14.3828V14.3789V14.375V14.3711V14.3672V14.3634V14.3595V14.3557V14.3518V14.3479V14.3441V14.3403V14.3364V14.3326V14.3288V14.325V14.3212V14.3174V14.3136V14.3098V14.306V14.3022V14.2984V14.2947V14.2909V14.2872V14.2834V14.2797V14.2759V14.2722V14.2685V14.2648V14.2611V14.2574V14.2537V14.25V14.2463V14.2426V14.239V14.2353V14.2317V14.228V14.2244V14.2207V14.2171V14.2135V14.2099V14.2063V14.2027V14.1991V14.1955V14.1919V14.1883V14.1848V14.1812V14.1777V14.1741V14.1706V14.1671V14.1636V14.1601V14.1566V14.1531V14.1496V14.1461V14.1426V14.1392V14.1357V14.1323V14.1288V14.1254V14.122V14.1186V14.1152V14.1118V14.1084V14.105V14.1016V14.0983V14.0949V14.0916V14.0882V14.0849V14.0816V14.0783V14.075V14.0717V14.0684V14.0651V14.0618V14.0586V14.0553V14.0521V14.0489V14.0456V14.0424V14.0392V14.036V14.0328V14.0297V14.0265V14.0233V14.0202V14.017V14.0139V14.0108V14.0077V14.0046V14.0015V13.9984V13.9953V13.9923V13.9892V13.9862V13.9831V13.9801V13.9771V13.9741V13.9711V13.9681V13.9652V13.9622C15.5438 13.9601 15.5449 13.9581 15.5466 13.957Z"
                stroke="black"
                stroke-width="0.4"
              />
              <path
                d="M1.82891 3.11358C1.82891 2.97364 1.9425 2.86016 2.08213 2.86016H3.44221C3.58184 2.86016 3.69544 2.97364 3.69544 3.11358V13.4929C3.69544 13.6327 3.58179 13.7464 3.44221 13.7464H2.08213C1.94256 13.7464 1.82891 13.6327 1.82891 13.4929V3.11358Z"
                stroke="black"
                stroke-width="0.4"
              />
              <path
                d="M12.1219 5.85362C12.1219 5.71393 12.2354 5.60039 12.3751 5.60039H13.7352C13.8749 5.60039 13.9884 5.71393 13.9884 5.85362V13.4942C13.9884 13.634 13.8748 13.7476 13.7352 13.7476H12.3751C12.2355 13.7476 12.1219 13.634 12.1219 13.4942V5.85362Z"
                stroke="black"
                stroke-width="0.4"
              />
              <path
                d="M8.69219 4.53155C8.69219 4.39181 8.80578 4.27813 8.94561 4.27813H10.3055C10.4453 4.27813 10.5589 4.39181 10.5589 4.53155V13.4943C10.5589 13.634 10.4453 13.7477 10.3055 13.7477H8.94561C8.80578 13.7477 8.69219 13.634 8.69219 13.4943V4.53155Z"
                stroke="black"
                stroke-width="0.4"
              />
              <path
                d="M5.2625 0.549128C5.2625 0.409326 5.37615 0.295703 5.51573 0.295703H6.87581C7.01549 0.295703 7.12923 0.40944 7.12923 0.549128V13.4942C7.12923 13.6339 7.01549 13.7476 6.87581 13.7476H5.51573C5.37615 13.7476 5.2625 13.634 5.2625 13.4942V0.549128Z"
                stroke="black"
                stroke-width="0.4"
              />
            </svg>
          }
          data={data}
          text={"Total Sells"}
        />

        <CardsTop
          color={"rgba(255, 211, 208, 1)"}
          icon={
            <svg
              width="17"
              height="19"
              viewBox="0 0 17 19"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M4.42832 10.7708C4.60082 10.5983 4.69772 10.3644 4.69772 10.1205V7.41178L7.05589 8.59087V16.0775L0.5 13.0235V5.31292L2.85818 6.49201V10.1205C2.85818 10.3644 2.95508 10.5983 3.12757 10.7708C3.30006 10.9433 3.53401 11.0402 3.77795 11.0402C4.02189 11.0402 4.25583 10.9433 4.42832 10.7708Z"
                stroke="black"
              />
              <path
                d="M7.10671 3.01889L7.10667 3.01891L3.75237 4.88263L1.63378 3.82334L7.97292 0.654663L9.7576 1.54635L7.10671 3.01889Z"
                stroke="black"
              />
              <mask id="path-3-inside-1_1126_15227" fill="white">
                <path d="M14.2715 12.6387C13.7318 12.6387 13.2043 12.7987 12.7556 13.0985C12.3069 13.3983 11.9572 13.8245 11.7507 14.323C11.5442 14.8216 11.4901 15.3702 11.5954 15.8995C11.7007 16.4288 11.9605 16.915 12.3421 17.2965C12.7237 17.6781 13.2099 17.938 13.7392 18.0433C14.2685 18.1486 14.8171 18.0945 15.3156 17.888C15.8142 17.6815 16.2404 17.3318 16.5402 16.8831C16.84 16.4344 17 15.9068 17 15.3672C17 14.6435 16.7125 13.9495 16.2008 13.4378C15.6891 12.9261 14.9951 12.6387 14.2715 12.6387ZM15.6169 16.1207C15.6608 16.1583 15.6965 16.2046 15.7217 16.2567C15.7469 16.3088 15.761 16.3655 15.7633 16.4233C15.7655 16.4811 15.7558 16.5388 15.7347 16.5926C15.7136 16.6465 15.6815 16.6954 15.6406 16.7363C15.5997 16.7772 15.5508 16.8093 15.4969 16.8304C15.4431 16.8515 15.3854 16.8612 15.3276 16.859C15.2698 16.8567 15.2131 16.8426 15.161 16.8174C15.1089 16.7922 15.0626 16.7565 15.025 16.7126L14.2715 15.9612L13.518 16.7126C13.4377 16.7813 13.3344 16.8173 13.2288 16.8132C13.1231 16.8091 13.0229 16.7653 12.9481 16.6905C12.8734 16.6158 12.8296 16.5156 12.8255 16.4099C12.8214 16.3043 12.8573 16.201 12.9261 16.1207L13.6775 15.3672L12.9261 14.6137C12.8573 14.5334 12.8214 14.4301 12.8255 14.3245C12.8296 14.2188 12.8734 14.1186 12.9481 14.0438C13.0229 13.9691 13.1231 13.9253 13.2288 13.9212C13.3344 13.9171 13.4377 13.953 13.518 14.0218L14.2715 14.7732L15.025 14.0218C15.1053 13.953 15.2086 13.9171 15.3142 13.9212C15.4199 13.9253 15.5201 13.9691 15.5948 14.0438C15.6696 14.1186 15.7134 14.2188 15.7175 14.3245C15.7216 14.4301 15.6856 14.5334 15.6169 14.6137L14.8655 15.3672L15.6169 16.1207Z" />
              </mask>
              <path
                d="M14.2715 12.6387V11.6387V12.6387ZM17 15.3672H18H17ZM15.6169 16.1207L14.9088 16.8268L14.9365 16.8546L14.9664 16.8802L15.6169 16.1207ZM15.025 16.7126L15.7845 16.0621L15.7589 16.0322L15.7311 16.0045L15.025 16.7126ZM14.2715 15.9612L14.9776 15.2531L14.2715 14.5489L13.5654 15.2531L14.2715 15.9612ZM13.518 16.7126L14.1685 17.4721L14.1973 17.4474L14.2241 17.4207L13.518 16.7126ZM12.9261 16.1207L12.218 15.4146L12.1912 15.4414L12.1666 15.4702L12.9261 16.1207ZM13.6775 15.3672L14.3856 16.0733L15.0898 15.3672L14.3856 14.6611L13.6775 15.3672ZM12.9261 14.6137L12.1666 15.2642L12.1912 15.293L12.218 15.3198L12.9261 14.6137ZM13.518 14.0218L14.2241 13.3137L14.1973 13.2869L14.1685 13.2623L13.518 14.0218ZM14.2715 14.7732L13.5654 15.4813L14.2715 16.1855L14.9776 15.4813L14.2715 14.7732ZM15.025 14.0218L14.3745 13.2623L14.3457 13.2869L14.3189 13.3137L15.025 14.0218ZM15.6169 14.6137L16.3249 15.3198L16.3517 15.293L16.3764 15.2642L15.6169 14.6137ZM14.8655 15.3672L14.1574 14.6611L13.4532 15.3672L14.1574 16.0733L14.8655 15.3672ZM14.2715 11.6387C13.5341 11.6387 12.8132 11.8573 12.2 12.267L13.3112 13.93C13.5954 13.74 13.9296 13.6387 14.2715 13.6387V11.6387ZM12.2 12.267C11.5869 12.6767 11.109 13.259 10.8268 13.9403L12.6745 14.7057C12.8054 14.3899 13.0269 14.1199 13.3112 13.93L12.2 12.267ZM10.8268 13.9403C10.5446 14.6216 10.4707 15.3713 10.6146 16.0946L12.5762 15.7044C12.5095 15.3691 12.5437 15.0216 12.6745 14.7057L10.8268 13.9403ZM10.6146 16.0946C10.7585 16.8178 11.1136 17.4822 11.635 18.0036L13.0492 16.5894C12.8075 16.3477 12.6429 16.0397 12.5762 15.7044L10.6146 16.0946ZM11.635 18.0036C12.1565 18.5251 12.8208 18.8802 13.5441 19.0241L13.9343 17.0625C13.599 16.9958 13.291 16.8312 13.0492 16.5894L11.635 18.0036ZM13.5441 19.0241C14.2674 19.1679 15.017 19.0941 15.6983 18.8119L14.933 16.9641C14.6171 17.095 14.2696 17.1292 13.9343 17.0625L13.5441 19.0241ZM15.6983 18.8119C16.3796 18.5297 16.9619 18.0518 17.3716 17.4386L15.7087 16.3275C15.5188 16.6118 15.2488 16.8333 14.933 16.9641L15.6983 18.8119ZM17.3716 17.4386C17.7813 16.8255 18 16.1046 18 15.3672L16 15.3672C16 15.7091 15.8986 16.0432 15.7087 16.3275L17.3716 17.4386ZM18 15.3672C18 14.3783 17.6072 13.43 16.9079 12.7307L15.4937 14.1449C15.8179 14.4691 16 14.9088 16 15.3672H18ZM16.9079 12.7307C16.2087 12.0315 15.2604 11.6387 14.2715 11.6387V13.6387C14.7299 13.6387 15.1696 13.8208 15.4937 14.1449L16.9079 12.7307ZM14.9664 16.8802C14.9057 16.8282 14.8563 16.7642 14.8215 16.6922L16.6219 15.8212C16.5367 15.645 16.4159 15.4884 16.2673 15.3611L14.9664 16.8802ZM14.8215 16.6922C14.7867 16.6202 14.7671 16.5418 14.764 16.4619L16.7625 16.3847C16.755 16.1892 16.7071 15.9973 16.6219 15.8212L14.8215 16.6922ZM14.764 16.4619C14.7609 16.382 14.7744 16.3023 14.8036 16.2279L16.6658 16.9574C16.7371 16.7752 16.7701 16.5802 16.7625 16.3847L14.764 16.4619ZM14.8036 16.2279C14.8327 16.1534 14.877 16.0858 14.9335 16.0292L16.3477 17.4434C16.4861 17.3051 16.5944 17.1396 16.6658 16.9574L14.8036 16.2279ZM14.9335 16.0292C14.9901 15.9727 15.0577 15.9284 15.1322 15.8993L15.8617 17.7615C16.0439 17.6901 16.2094 17.5818 16.3477 17.4434L14.9335 16.0292ZM15.1322 15.8993C15.2066 15.8701 15.2863 15.8566 15.3662 15.8597L15.289 17.8582C15.4845 17.8658 15.6795 17.8328 15.8617 17.7615L15.1322 15.8993ZM15.3662 15.8597C15.4461 15.8628 15.5245 15.8824 15.5965 15.9172L14.7255 17.7176C14.9016 17.8028 15.0935 17.8507 15.289 17.8582L15.3662 15.8597ZM15.5965 15.9172C15.6685 15.952 15.7325 16.0014 15.7845 16.0621L14.2654 17.363C14.3927 17.5116 14.5493 17.6324 14.7255 17.7176L15.5965 15.9172ZM15.7311 16.0045L14.9776 15.2531L13.5654 16.6693L14.3189 17.4207L15.7311 16.0045ZM13.5654 15.2531L12.8119 16.0045L14.2241 17.4207L14.9776 16.6693L13.5654 15.2531ZM12.8675 15.953C12.9785 15.858 13.1213 15.8083 13.2673 15.8139L13.1902 17.8124C13.5475 17.8262 13.8968 17.7047 14.1685 17.4721L12.8675 15.953ZM13.2673 15.8139C13.4134 15.8196 13.5519 15.8801 13.6552 15.9834L12.241 17.3977C12.4939 17.6505 12.8328 17.7986 13.1902 17.8124L13.2673 15.8139ZM13.6552 15.9834C13.7586 16.0868 13.8191 16.2253 13.8247 16.3713L11.8262 16.4485C11.84 16.8058 11.9882 17.1448 12.241 17.3977L13.6552 15.9834ZM13.8247 16.3713C13.8304 16.5173 13.7807 16.6601 13.6857 16.7711L12.1666 15.4702C11.934 15.7418 11.8124 16.0912 11.8262 16.4485L13.8247 16.3713ZM13.6342 16.8268L14.3856 16.0733L12.9694 14.6611L12.218 15.4146L13.6342 16.8268ZM14.3856 14.6611L13.6342 13.9076L12.218 15.3198L12.9694 16.0733L14.3856 14.6611ZM13.6857 13.9632C13.7807 14.0743 13.8304 14.217 13.8247 14.363L11.8262 14.2859C11.8124 14.6432 11.934 14.9925 12.1666 15.2642L13.6857 13.9632ZM13.8247 14.363C13.8191 14.5091 13.7586 14.6476 13.6552 14.7509L12.241 13.3367C11.9882 13.5896 11.84 13.9285 11.8262 14.2859L13.8247 14.363ZM13.6552 14.7509C13.5519 14.8543 13.4134 14.9148 13.2673 14.9205L13.1902 12.9219C12.8328 12.9357 12.4939 13.0839 12.241 13.3367L13.6552 14.7509ZM13.2673 14.9205C13.1213 14.9261 12.9785 14.8764 12.8675 14.7814L14.1685 13.2623C13.8968 13.0297 13.5475 12.9081 13.1902 12.9219L13.2673 14.9205ZM12.8119 14.7299L13.5654 15.4813L14.9776 14.0651L14.2241 13.3137L12.8119 14.7299ZM14.9776 15.4813L15.7311 14.7299L14.3189 13.3137L13.5654 14.0651L14.9776 15.4813ZM15.6754 14.7814C15.5644 14.8764 15.4216 14.9261 15.2756 14.9205L15.3528 12.9219C14.9955 12.9081 14.6461 13.0297 14.3745 13.2623L15.6754 14.7814ZM15.2756 14.9205C15.1296 14.9148 14.9911 14.8543 14.8877 14.7509L16.302 13.3367C16.0491 13.0839 15.7101 12.9357 15.3528 12.9219L15.2756 14.9205ZM14.8877 14.7509C14.7844 14.6476 14.7239 14.5091 14.7182 14.363L16.7167 14.2859C16.7029 13.9285 16.5548 13.5896 16.302 13.3367L14.8877 14.7509ZM14.7182 14.363C14.7126 14.217 14.7622 14.0743 14.8573 13.9632L16.3764 15.2642C16.609 14.9925 16.7305 14.6432 16.7167 14.2859L14.7182 14.363ZM14.9088 13.9076L14.1574 14.6611L15.5736 16.0733L16.3249 15.3198L14.9088 13.9076ZM14.1574 16.0733L14.9088 16.8268L16.3249 15.4146L15.5736 14.6611L14.1574 16.0733Z"
                fill="black"
                mask="url(#path-3-inside-1_1126_15227)"
              />
              <path
                d="M7.88359 4.69502L7.884 4.6948L11.7585 2.5436L14.3197 3.82348L7.98086 6.99202L5.75464 5.87962L7.88359 4.69502Z"
                stroke="black"
              />
              <path
                d="M14.2669 11.2995C13.1882 11.2997 12.1537 11.7283 11.3909 12.4911C10.628 13.254 10.1994 14.2887 10.1994 15.3676L10.1994 15.3711C10.1996 15.4031 10.2002 15.435 10.2011 15.467L8.89062 16.0775V8.59087L15.4465 5.31292V11.4734C15.0654 11.3579 14.668 11.2989 14.2669 11.2995ZM14.2669 11.2995C14.2671 11.2995 14.2673 11.2995 14.2674 11.2995V11.7995L14.2666 11.2995C14.2667 11.2995 14.2668 11.2995 14.2669 11.2995Z"
                stroke="black"
              />
            </svg>
          }
          text={"Cancelled Orders"}
          data={data1}
        />
        <CardsTop
          color={"rgba(209, 216, 255, 1)"}
          icon={
            <svg
              width="19"
              height="17"
              viewBox="0 0 19 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M2.63828 8.91429L2.63829 8.91428L2.63573 8.91177C1.12174 7.42593 0.5 5.835 0.5 4.45661C0.5 3.26219 0.896001 2.30602 1.55575 1.64946C2.21565 0.992741 3.17975 0.595703 4.39053 0.595703C5.53348 0.595703 6.25715 0.856829 6.86214 1.28286C7.42906 1.68208 7.90598 2.23142 8.52759 2.94743C8.60469 3.03624 8.68402 3.12761 8.76602 3.22158L9.14273 3.65327L9.51946 3.22161C9.60235 3.12663 9.68251 3.0343 9.76039 2.9446C10.3809 2.22989 10.857 1.68151 11.4229 1.2828C12.0275 0.856825 12.7508 0.595703 13.8939 0.595703C15.1054 0.595703 16.0698 0.992782 16.7298 1.64949C17.3897 2.30604 17.7857 3.26219 17.7857 4.45661C17.7857 5.83505 17.1641 7.42614 15.6502 8.91175L15.6502 8.91174L15.6476 8.91428L9.14276 15.3902L2.63828 8.91429Z"
                stroke="black"
              />
            </svg>
          }
          text={"Total Added Favourites"}
          data={data2}
        />
        <CardsTop
          color={"rgba(255, 231, 193, 1)"}
          icon={
            <svg
              width="64px"
              height="64px"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
              <g
                id="SVGRepo_tracerCarrier"
                stroke-linecap="round"
                stroke-linejoin="round"
              ></g>
              <g id="SVGRepo_iconCarrier">
                {" "}
                <path
                  d="M15.0007 12C15.0007 13.6569 13.6576 15 12.0007 15C10.3439 15 9.00073 13.6569 9.00073 12C9.00073 10.3431 10.3439 9 12.0007 9C13.6576 9 15.0007 10.3431 15.0007 12Z"
                  stroke="#000000"
                  stroke-width="1.032"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                ></path>{" "}
                <path
                  d="M12.0012 5C7.52354 5 3.73326 7.94288 2.45898 12C3.73324 16.0571 7.52354 19 12.0012 19C16.4788 19 20.2691 16.0571 21.5434 12C20.2691 7.94291 16.4788 5 12.0012 5Z"
                  stroke="#000000"
                  stroke-width="1.032"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                ></path>{" "}
              </g>
            </svg>
          }
          text={"Total Views"}
          data={data3}
        />
      </div>
      {/* graph data */}
      <div className="flex md:flex-row flex-col mt-10 gap-3 ">
        <div className="bg-containerWhite w-full md:w-[60%] max-h-[550px] p-4 rounded-lg shadow-sm">
          <LineChartProductSale
            salesAnalysis={salesAnalysis}
            setselected={setselected}
            selected={selected}
            currency={productData?.currency}
          />
        </div>
        <div
          className="bg-containerWhite max-h-[550px] overflow-hidden overflow-y-auto  w-full md:w-[40%] p-4 rounded-lg shadow-sm"
          style={{ scrollbarWidth: "none" }}
        >
          <h1 className="font-semibold text-2xl mt-1 text-textColor">
            Customers Demographic
          </h1>
          <h3 className=" text-textColor mb-5">
            Number of customers based on country
          </h3>
          <MyVectorMap
            topViewedCountry={topViewedCountry}
            topSelledCountry={topSelledCountry}
          />
          {/* top seeled cont */}
          {topSelledCountry?.length > 0 &&
            topSelledCountry?.map((country, index) => {
              const countryCode = countryCodeMap[country?.country.trim()];
              return (
                <div className="mt-4">
                  <h1 className="text-md ">Top Selled Country</h1>
                  <div className="flex justify-between items-center mt-2">
                    <div className="flex gap-2 items-center">
                      <div className="rounded-full w-16 h-16 overflow-x-hidden">
                        <ReactCountryFlag
                          countryCode={countryCode}
                          svg
                          style={{
                            width: "4em",
                            height: "4em",
                          }}
                          title={country[index]}
                        />
                      </div>
                      <div className="text-sm">
                        <h1>{country?.country}</h1>
                        <p className="text-gray-500 text-sm">
                          {country?.count} Sales
                        </p>
                      </div>
                    </div>
                    <div className="rounded-lg w-7 h-7 bg-[#BE0A33]"></div>
                  </div>
                </div>
              );
            })}
          {/* top seeled cont */}
          {/* most viewed */}
          {topViewedCountry?.length > 0 &&
            topViewedCountry?.map((country, index) => {
              const countryCode = countryCodeMap[country?.country.trim()];
              return (
                <div className="mt-4">
                  <h1 className="text-md ">Top Viewed Country</h1>
                  <div className="flex justify-between items-center mt-2">
                    <div className="flex gap-2 items-center">
                      <div className="rounded-full w-16 h-16 overflow-x-hidden">
                        <ReactCountryFlag
                          countryCode={countryCode}
                          svg
                          style={{
                            width: "4em",
                            height: "4em",
                          }}
                          title={country[index]}
                        />
                      </div>
                      <div className="text-sm">
                        <h1>{country?.country}</h1>
                        <p className="text-gray-500 text-sm">
                          {country?.viewCount} Views
                        </p>
                      </div>
                    </div>
                    <div
                      className="rounded-lg w-7 h-7"
                      style={{ backgroundColor: "#002654" }}
                    ></div>
                  </div>
                </div>
              );
            })}
          {/* most viewed */}

          {/* table start */}
        </div>
      </div>
      <div className="mt-2">
        <p className="text-3xl font-semibold text-textColor">Reviews</p>
      </div>
      <div className="w-full flex-col flex md:flex-row gap-5 mt-5">
        <div className="p-4 bg-containerWhite w-full md:w-[40%] md:max-w[300px] rounded-lg">
          <div className="flex gap-2 items-center text-textColor">
            <svg
              width="28"
              height="28"
              viewBox="0 0 28 28"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M14 28C21.732 28 28 21.732 28 14C28 6.26801 21.732 0 14 0C6.26801 0 0 6.26801 0 14C0 21.732 6.26801 28 14 28Z"
                fill="#34A4E3"
              />
              <path
                d="M14.0009 5.44531L16.649 10.6937L22.5564 11.5574L18.2786 15.6099L19.2972 21.3898L14.0009 18.6659L8.70457 21.3898L9.72309 15.6099L5.44531 11.5574L11.3527 10.6937L14.0009 5.44531Z"
                fill="white"
              />
            </svg>
            Overall Ratings
          </div>
          <div className="flex items-center justify-center mt-4">
            <h1
              className="font-semibold text-3xl text-textColor"
              style={{ fontSize: "45px" }}
            >
              {productReviewDatas?.ratings?.average}
              <span className="text-textColor">/5</span>{" "}
            </h1>
          </div>
          <div className="flex items-center justify-center gap-2 mt-2">
            <Rating name="read-only" value={Ratings} readOnly className="" />
          </div>
          <div className="flex items-center justify-center gap-2 mt-3 text-xs text-[#858D9D]">
            {productReviewDatas?.reviews?.length} Ratings
          </div>
        </div>
      </div>
      <div
        className="w-full bg-subContainerColor rounded-lg mt-10 overflow-x-auto"
        style={{ scrollbarWidth: "none" }}
      >
        <table className="min-w-[70vh] w-full text-center  leading-normal mt-5 max-h-72 overflow-x-auto">
          <thead className="border-b  border-b-[#3F3F3F]">
            <tr className="text-textColor">
              <th className="px-5 py-6   text-sm font-semibold  capitalize tracking-wider">
                Customer
              </th>
              {/* <th className="px-5 py-6  text-left text-sm font-semibold  capitalize tracking-wider"></th> */}
              <th className="px-5 py-6   text-sm font-semibold  capitalize tracking-wider">
                Review
              </th>
              <th className="px-5 py-6   text-sm font-semibold  capitalize tracking-wider">
                Date
              </th>

              {/* <th className="px-5 py-6   text-sm font-semibold  capitalize tracking-wider">
                Action
              </th> */}
            </tr>
          </thead>
          <tbody className="border-b-2  border-b-[#3F3F3F]">
            {productReviewDatas?.reviews?.length > 0 ? (
              productReviewDatas?.reviews?.map((review, index) => {
                return (
                  <tr className="" style={{ height: "50px" }}>
                    <td className="px-5 py-3 text-sm">
                      <div className="flex items-center gap-2">
                        <div className="w-10 h-10 overflow-hidden rounded-full bg-[#1F222A] text-textColor">
                          <img
                            src={
                              review?.user?.details.profilePicture
                                ? review?.user?.details.profilePicture
                                : "https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png"
                            }
                            className="w-10 h-10 rounded-full"
                            alt=""
                          />
                        </div>
                        {review?.user?.name}
                      </div>
                    </td>

                    <td className="px-5 py-5 text-xs text-[#6F757E] text-transform: capitalize">
                      <div className="text-textColor">
                        <div className="flex items-center justify-center px-3 mb-3 gap-2 mt-2">
                          <Rating
                            name="read-only"
                            value={review?.rating}
                            readOnly
                          />
                        </div>
                        {review?.review}
                      </div>
                    </td>
                    <td className="px-5 py-3 text-sm text-textColor">
                      {new Date(review?.Date).toLocaleDateString()}
                    </td>
                  </tr>
                );
              })
            ) : (
              <tr>
                <td colSpan="9" className="text-center text-red-700 py-5 ">
                  No Reviews
                </td>
              </tr>
            )}
          </tbody>
        </table>
        {/* <div className="w-full flex justify-end px-10 mb-4 mt-8">
          <ThemeProvider theme={theme}>
            <Pagination
              count={2}
              // onChange={handlePageChange}
            />
          </ThemeProvider>
        </div> */}
      </div>
    </>
  );
};

export default ProductDetailed;
