import React, { useEffect, useRef, useState, createContext } from "react";
import Card from "./card/Card";
import LineChart from "./graph/LineChart";
import ThirdSection from "./card/ThirdSection";
import Button from "./button/Button";
import CloudTable from "./tables/CloudTable";
import FlixTable from "./tables/FlixTable";
import OrederTable from "./tables/OrderTable";
import BAnnerSection from "./tables/BAnnerSection";
import SpecielDeals from "./tables/SpecialDeals";
import { useDispatch } from "react-redux";
import {
  adminCloudRevenuetable,
  adminFlixTablerevenue,
  adminrevenueOreder,
  adminrevenuebenner,
  getrevenueFirstSection,
  geytgraphdataofRevenue,
} from "../../../Api/AdminApi";
import SpecialDeals from "./tables/SpecialDeals";
export const UserContext = createContext();

function Adminrevenue() {
  const [drop1, setDrp1] = useState(false);
  const [firstSectiondata, seFirstSectionData] = useState([]);
  const [firstsection2, setfirstsection2] = useState({});
  const [payOut, setPayOut] = useState({});
  const [transaction, setTransaction] = useState({});
  const [graphData, setGraphdata] = useState({});
  const [graphkey, setGraphkey] = useState("currentYear");
  const [page, setPage] = useState(1);
  const loader = useRef(null);
  const [totalpages, setTotalPage] = useState(0);
  useEffect(() => {
    if (totalpages < 12) {
      return;
    }
    // Function to check if the document height is greater than the viewport height
    const isScrollRequired = () => {
      return document.documentElement.scrollHeight > window.innerHeight;
    };

    const options = {
      root: null,
      rootMargin: "20px",
      threshold: 0,
    };

    const observerCallback = (entities) => {
      const target = entities[0];
      if (target.isIntersecting) {
        setPage((prev) => prev + 1);
      }
    };

    const observer = new IntersectionObserver(observerCallback, options);

    // Setup observer if scrolling is required
    const setupObserver = () => {
      if (loader.current && isScrollRequired()) {
        observer.observe(loader.current);
      } else {
        // Use a timeout to retry after some time, in case content or images are still loading
        setTimeout(setupObserver, 500);
      }
    };

    setupObserver();

    return () => {
      if (loader.current) {
        observer.unobserve(loader.current);
      }
    };
  }, []);
  console.log(page);
  useEffect(() => {
    getGraphData();
  }, [graphkey]);
  const getGraphData = () => {
    geytgraphdataofRevenue(graphkey)
      .then((data) => {
        setGraphdata(data?.data);
      })
      .catch((err) => console.log(err));
  };
  const [totalAmount, setTotalAmount] = useState();
  const [border, setborder] = useState("Cloud");
  const [cloudData, setCloudData] = useState([]);
  const [flixData, setFlixData] = useState([]);
  const [orderData, setOrederData] = useState([]);
  const [spesialDealsdata, setSpecialDealsdata] = useState([]);
  const [bannerData, setBanarData] = useState([]);
  const [graphstatekey, setstateGraphkey] = useState("Current Year");
  const [loading, setLoading] = useState(true);
  const [CurrencySymbol, setCurrencySymbol] = useState("");
  const dispatch = useDispatch();
  const handliSubmit = (cheking = "Cloud") => {
    // dispatch(loadSpinner());
    setborder(cheking);
    setLoading(true);
    if (cheking === "Cloud") {
      adminCloudRevenuetable(page)
        .then((data) => {
          // console.log(data?.data?.cloudDetails);
          setLoading(false);
          setCloudData((prev) => [...prev, ...data?.data?.cloudDetails]);
        })
        .catch((err) => {
          console.log(err);
          setLoading(false);
        })
        .finally(() => {
          // dispatch(loadSpinner());
        });
    } else if (cheking === "Flicks") {
      adminFlixTablerevenue(page)
        .then((data) => {
          // console.log(data?.data?.membershipDetails);
          setLoading(false);
          setFlixData((prev) => [...prev, ...data?.data?.membershipDetails]);
        })
        .catch((err) => {
          console.log(err);
        })
        .finally(() => {
          // dispatch(loadSpinner());
        });
    } else if (cheking === "Orders") {
      adminrevenueOreder()
        .then((data) => {
          // console.log(data?.data?.orderDetails);
          setLoading(false);
          setOrederData(data?.data?.orderDetails);
        })
        .catch((err) => {
          setLoading(false);
          console.log(err);
        })
        .finally(() => {
          // dispatch(loadSpinner());
        });
    }
    // else if (cheking === "Special deals") {
    //   adminrevenueSpesialDeals()
    //     .then((data) => {
    //       setLoading(false);
    //       // console.log(data?.data?.specialDeals);
    //       setSpecialDealsdata(data?.data?.specialDeals);
    //     })
    //     .catch((err) => {
    //       console.log(err);
    //     })
    //     .finally(() => {
    //       dispatch(loadSpinner());
    //     });
    // }
    else if (cheking === "Banner Section") {
      adminrevenuebenner(page)
        .then((data) => {
          // console.log(data?.data?.requests);
          setLoading(false);
          setBanarData(data?.data?.requests);
        })
        .catch((err) => {
          setLoading(false);
          console.log(err);
        })
        .finally(() => {
          // dispatch(loadSpinner());
        });
    }
  };
  useEffect(() => {
    handliSubmit();
  }, [page]);
  useEffect(() => {
    getrevenueFirstSection()
      .then((data) => {
        setTransaction(data?.data?.details?.totalTransaction);
        setPayOut(data?.data?.details?.payouts);
        setfirstsection2(data?.data?.details?.totalIncome);
        seFirstSectionData(data?.data?.details);
        setCurrencySymbol(data?.data?.details?.currency);
        console.log(data?.data?.details, "}}}}}}}}}}}}}}}}}}}}}}}}]");
        setTotalAmount(data?.data?.details?.totalAmount);
      })
      .catch((err) => {
        console.log(err);
      });
  }, []);

  return (
    <UserContext.Provider value={CurrencySymbol}>
      <div>
        <div className="grid gap-8 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
          <Card
            data={firstSectiondata?.totalAmount}
            firstText={"Total Amounts"}
            currency={CurrencySymbol}
            img={
              <svg
                width="50"
                height="50"
                viewBox="0 0 50 50"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <rect width="50" height="50" rx="10" fill="#FFECE6" />
                <path
                  d="M32.152 28.7346C31.9724 28.5717 31.7629 28.442 31.5301 28.3522C31.2906 28.2591 31.0379 28.2125 30.7785 28.2125C30.6155 28.2125 30.4592 28.1826 30.3129 28.126C30.1732 28.0728 30.0469 27.9963 29.9404 27.8966C29.8374 27.8001 29.7542 27.6904 29.6977 27.5707C29.6411 27.4476 29.6112 27.3179 29.6112 27.1849C29.6112 27.0519 29.6411 26.9222 29.6977 26.7991C29.7542 26.6761 29.8374 26.5697 29.9404 26.4732C30.0469 26.3768 30.1732 26.3003 30.3129 26.2438C30.6089 26.1307 30.9514 26.1307 31.2474 26.2438C31.3871 26.297 31.5134 26.3735 31.6199 26.4732C31.723 26.5697 31.8061 26.6761 31.8626 26.7991C31.9557 26.9987 32.1919 27.0851 32.3914 26.992C32.5909 26.8989 32.6774 26.6628 32.5843 26.4633C32.4812 26.2438 32.3382 26.0509 32.1553 25.8846C31.9757 25.7216 31.7662 25.592 31.5334 25.5022C31.4536 25.4722 31.3671 25.4456 31.284 25.4257V24.9069C31.284 24.6874 31.1044 24.5078 30.8849 24.5078C30.6654 24.5078 30.4858 24.6874 30.4858 24.9069V25.3858C30.3295 25.409 30.1732 25.4456 30.0269 25.5022C29.7941 25.592 29.5846 25.7216 29.405 25.8846C29.2221 26.0509 29.0791 26.2471 28.976 26.4633C28.8696 26.6927 28.8164 26.9355 28.8164 27.1849C28.8164 27.4343 28.8696 27.6771 28.976 27.9065C29.0758 28.1227 29.2221 28.3189 29.405 28.4852C29.5846 28.6482 29.7941 28.7778 30.0269 28.8676C30.2664 28.9608 30.5191 29.0073 30.7785 29.0073C30.9414 29.0073 31.0977 29.0372 31.2441 29.0938C31.3837 29.147 31.5101 29.2235 31.6165 29.3232C31.7196 29.4197 31.8028 29.5294 31.8593 29.6491C31.9158 29.7722 31.9458 29.9019 31.9458 30.0349C31.9458 30.1679 31.9158 30.2976 31.8593 30.4207C31.8028 30.5437 31.7196 30.6535 31.6165 30.7466C31.5101 30.843 31.3837 30.9195 31.2441 30.9761C30.9481 31.0891 30.6056 31.0891 30.3096 30.9761C30.1699 30.9228 30.0435 30.8464 29.9371 30.7466C29.834 30.6535 29.7509 30.5437 29.6944 30.4207C29.6012 30.2211 29.3651 30.1347 29.1656 30.2278C28.9661 30.3209 28.8796 30.557 28.9727 30.7566C29.0758 30.9761 29.2188 31.1689 29.4017 31.3352C29.5813 31.4982 29.7908 31.6279 30.0236 31.7177C30.1699 31.7742 30.3262 31.8108 30.4825 31.8341V32.3129C30.4825 32.5324 30.6621 32.712 30.8816 32.712C31.1011 32.712 31.2807 32.5324 31.2807 32.3129V31.7941C31.3638 31.7742 31.4503 31.7509 31.5301 31.7177C31.7629 31.6279 31.9724 31.4982 32.152 31.3352C32.3349 31.1689 32.4779 30.9727 32.581 30.7566C32.6874 30.5271 32.7406 30.2843 32.7406 30.0349C32.7406 29.7855 32.6874 29.5427 32.581 29.3133C32.4779 29.0971 32.3349 28.9009 32.152 28.7346Z"
                  fill="black"
                />
                <path
                  d="M30.8553 22.4958V18.6881C30.8553 16.6196 28.1682 15 24.7362 15C21.3043 15 18.6172 16.6196 18.6172 18.6881V24.837V25.2361V28.1127V28.5118V31.3119C18.6172 33.3804 21.3043 35 24.7362 35C25.9567 35 27.134 34.7872 28.1383 34.3881L28.4376 34.2684C29.1593 34.5677 29.9474 34.734 30.7755 34.734C34.1476 34.734 36.8945 31.9904 36.8945 28.6149C36.8945 25.266 34.1908 22.5391 30.8553 22.4958ZM24.7362 15.7948C27.6195 15.7948 30.0572 17.1184 30.0572 18.6881C30.0572 20.2544 27.6195 21.5813 24.7362 21.5813C21.853 21.5813 19.4153 20.2577 19.4153 18.6881C19.4153 17.1217 21.853 15.7948 24.7362 15.7948ZM19.4153 20.5338C20.4596 21.6445 22.4283 22.3794 24.7362 22.3794C27.0442 22.3794 29.0163 21.6445 30.0572 20.5338V22.5391C28.4343 22.7286 27.001 23.5567 26.0232 24.7672C25.6042 24.8204 25.1719 24.8537 24.7362 24.8537C21.853 24.8537 19.4153 23.5301 19.4153 21.9604V20.5338ZM19.4153 24.837V23.8061C20.4596 24.9169 22.4283 25.6518 24.7362 25.6518C24.9724 25.6518 25.2051 25.6418 25.4379 25.6252C25.0156 26.3768 24.7495 27.2248 24.6764 28.126C21.8164 28.1094 19.412 26.7925 19.412 25.2361V24.837H19.4153ZM19.4153 28.1094V27.0785C20.4463 28.1759 22.3884 28.9075 24.6664 28.9209C24.7096 29.8021 24.9424 30.6335 25.3249 31.3785C25.132 31.3918 24.9358 31.3984 24.7396 31.3984C21.8563 31.3984 19.4187 30.0748 19.4187 28.5052V28.1094H19.4153ZM24.7362 34.1985C21.853 34.1985 19.4153 32.875 19.4153 31.3053V30.3508C20.4596 31.4616 22.4283 32.1965 24.7362 32.1965C25.0222 32.1965 25.3082 32.1832 25.5876 32.1633L25.7871 32.1467C26.2461 32.7918 26.828 33.3472 27.4965 33.7729C26.6617 34.0522 25.7173 34.1985 24.7362 34.1985ZM30.7755 33.9325C27.8423 33.9325 25.4546 31.5447 25.4546 28.6116C25.4546 25.6784 27.8423 23.2907 30.7755 23.2907C33.7086 23.2907 36.0964 25.6784 36.0964 28.6116C36.0997 31.5481 33.712 33.9325 30.7755 33.9325Z"
                  fill="black"
                />
                <path
                  d="M34.2005 20.5801C33.9445 20.5801 33.7383 20.7863 33.7383 21.0423V21.3516C33.7383 21.6077 33.9445 21.8139 34.2005 21.8139C34.4566 21.8139 34.6628 21.6077 34.6628 21.3516V21.0423C34.6628 20.7863 34.4566 20.5801 34.2005 20.5801Z"
                  fill="black"
                />
                <path
                  d="M35.5834 17.3506H34.6589V16.4261C34.6589 16.1701 34.4527 15.9639 34.1967 15.9639C33.9406 15.9639 33.7344 16.1701 33.7344 16.4261V17.3506H32.8099C32.5538 17.3506 32.3477 17.5568 32.3477 17.8129C32.3477 18.069 32.5538 18.2751 32.8099 18.2751H33.7344V19.1997C33.7344 19.4557 33.9406 19.6619 34.1967 19.6619C34.4527 19.6619 34.6589 19.4557 34.6589 19.1997V18.2751H35.5834C35.8395 18.2751 36.0457 18.069 36.0457 17.8129C36.0457 17.5568 35.8395 17.3506 35.5834 17.3506Z"
                  fill="black"
                />
                <path
                  d="M17.2358 24.0489H16.3113V23.1244C16.3113 22.8683 16.1051 22.6621 15.849 22.6621C15.5929 22.6621 15.3868 22.8683 15.3868 23.1244V24.0489H14.4623C14.2062 24.0489 14 24.2551 14 24.5111C14 24.7672 14.2062 24.9734 14.4623 24.9734H15.3868V25.8979C15.3868 26.154 15.5929 26.3601 15.849 26.3601C16.1051 26.3601 16.3113 26.154 16.3113 25.8979V24.9734H17.2358C17.4919 24.9734 17.698 24.7672 17.698 24.5111C17.6947 24.2551 17.4885 24.0489 17.2358 24.0489Z"
                  fill="black"
                />
              </svg>
            }
          />
          <Card
            data={firstsection2}
            currency={CurrencySymbol}
            firstText={"Income"}
            img={
              <svg
                width="50"
                height="50"
                viewBox="0 0 50 50"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <rect width="50" height="50" rx="10" fill="#F2EFFF" />
                <path
                  d="M36.0836 25.634C35.9566 25.4412 35.7914 25.2767 35.5982 25.1505C35.4049 25.0242 35.1878 24.9391 34.9603 24.9002C34.7184 24.8563 34.4701 24.8617 34.2304 24.9162C33.9907 24.9707 33.7645 25.0731 33.5653 25.2173L29.1359 28.4519C28.5121 27.8063 27.2975 27.5529 26.0188 27.2865C25.0228 27.0786 23.993 26.8644 23.4196 26.4631C21.1987 24.9062 18.8051 25.2774 16.3022 27.5646C16.034 27.3006 15.6869 27.1317 15.3137 27.0834C14.9405 27.0352 14.5618 27.1103 14.2354 27.2974L13.8569 27.5163C13.4634 27.7448 13.1763 28.1199 13.0586 28.5596C12.9409 28.9992 13.002 29.4676 13.2287 29.8622L16.2037 35.0153C16.4314 35.4098 16.8064 35.6978 17.2464 35.8159C17.6863 35.934 18.1552 35.8727 18.5499 35.6453L18.9286 35.4264C19.242 35.2441 19.4899 34.9677 19.6372 34.6364C19.7845 34.3051 19.8237 33.9359 19.7492 33.5811C19.816 33.5395 19.8856 33.4945 19.9586 33.4475C20.3423 33.1998 20.8683 32.8603 21.1888 32.9066C21.6177 32.9679 22.1388 33.0662 22.6903 33.1701C24.0195 33.4186 25.6216 33.7219 27.0426 33.7219C28.1716 33.7219 29.1866 33.5312 29.8582 32.9723L35.6847 28.1219C36.0495 27.8316 36.2926 27.4155 36.3664 26.9552C36.4402 26.495 36.3394 26.0237 36.0836 25.634ZM19.187 34.2371C19.1483 34.3841 19.0808 34.522 18.9885 34.6428C18.8961 34.7636 18.7807 34.8648 18.6489 34.9407L18.2702 35.1595C18.0041 35.3127 17.6881 35.3541 17.3915 35.2746C17.0948 35.1952 16.8418 35.0013 16.6879 34.7356L13.7129 29.5826C13.5605 29.3163 13.5195 29.0005 13.5989 28.7042C13.6783 28.4078 13.8717 28.1548 14.1369 28.0005L14.5155 27.7819C14.69 27.6807 14.8882 27.6274 15.09 27.6275C15.1926 27.6276 15.2949 27.6411 15.3941 27.6678C15.5411 27.7064 15.6791 27.7739 15.7999 27.8663C15.9207 27.9586 16.022 28.074 16.0979 28.2058L19.0729 33.3581C19.1491 33.4898 19.1985 33.6353 19.218 33.7863C19.2376 33.9372 19.2271 34.0903 19.187 34.2371ZM35.327 27.692L29.5006 32.5412C28.1862 33.6349 25.0696 33.0475 22.7948 32.6191C22.237 32.5152 21.7102 32.4148 21.2691 32.3514C20.7412 32.2763 20.1395 32.6633 19.6577 32.9752L19.5425 33.0493L16.6354 28.0184C18.9658 25.8655 21.0817 25.5066 23.0994 26.9211C23.7664 27.3889 24.8533 27.6148 25.9047 27.8339C27.1637 28.0961 28.4659 28.3675 28.8648 29.0069C28.9331 29.1256 28.9756 29.2573 28.9896 29.3935C29.0036 29.5298 28.9887 29.6674 28.9459 29.7975C28.921 29.935 28.8675 30.0658 28.789 30.1814C28.7105 30.2971 28.6087 30.395 28.49 30.4689C27.9047 30.801 26.8825 30.4967 26.0614 30.2524C25.8602 30.1923 25.6702 30.1359 25.4971 30.0917C25.4257 30.0745 25.3503 30.0862 25.2873 30.1241C25.2244 30.162 25.1789 30.2233 25.1607 30.2945C25.1425 30.3657 25.1531 30.4412 25.1902 30.5047C25.2273 30.5682 25.2879 30.6145 25.3589 30.6336C25.5213 30.675 25.7061 30.7298 25.9018 30.7883C26.8248 31.0628 27.9733 31.4048 28.7661 30.9552C28.9507 30.8447 29.1104 30.697 29.2349 30.5215C29.3593 30.3459 29.4458 30.1464 29.4889 29.9355C29.5864 29.6008 29.5716 29.2434 29.4468 28.918L33.8962 25.6691C34.034 25.5694 34.1905 25.4986 34.3564 25.461C34.5222 25.4234 34.694 25.4197 34.8613 25.4502C35.0141 25.4759 35.16 25.5327 35.2901 25.617C35.4201 25.7014 35.5314 25.8116 35.6171 25.9407C35.7959 26.2162 35.8652 26.5485 35.8116 26.8725C35.7579 27.1965 35.5851 27.4888 35.327 27.692ZM20.1328 24.8849H32.9527C33.2377 24.8846 33.511 24.7713 33.7127 24.57C33.9144 24.3687 34.0281 24.0957 34.029 23.8107C34.314 23.8098 34.587 23.696 34.7884 23.4943C34.9897 23.2926 35.1029 23.0194 35.1033 22.7344V15.0766C35.1029 14.7911 34.9893 14.5173 34.7874 14.3155C34.5854 14.1137 34.3117 14.0002 34.0262 14H21.207C20.922 14.0003 20.6487 14.1136 20.447 14.3149C20.2452 14.5162 20.1314 14.7892 20.1304 15.0742C19.8453 15.0752 19.5721 15.1891 19.3708 15.3911C19.1695 15.5931 19.0565 15.8667 19.0565 16.1518V23.8089C19.0569 24.0942 19.1704 24.3677 19.3722 24.5694C19.574 24.7711 19.8475 24.8846 20.1328 24.8849ZM21.207 14.5599H34.0262C34.1633 14.56 34.2948 14.6145 34.3918 14.7115C34.4889 14.8084 34.5435 14.9399 34.5437 15.0771V22.7339C34.5435 22.8706 34.4892 23.0017 34.3928 23.0985C34.2963 23.1954 34.1655 23.2503 34.0288 23.2511V16.1518C34.0284 15.8664 33.9149 15.5928 33.7131 15.391C33.5113 15.1891 33.2376 15.0756 32.9522 15.0753H20.6898C20.6903 14.9384 20.745 14.8073 20.842 14.7106C20.9389 14.6139 21.0701 14.5595 21.207 14.5593V14.5599ZM19.6156 16.1518C19.6157 16.0147 19.6702 15.8832 19.7672 15.7861C19.8641 15.6891 19.9956 15.6345 20.1328 15.6343H32.9527C33.0899 15.6345 33.2214 15.6891 33.3183 15.7861C33.4153 15.8832 33.4698 16.0147 33.47 16.1518V23.8089C33.4698 23.946 33.4153 24.0775 33.3183 24.1745C33.2214 24.2715 33.0899 24.3261 32.9527 24.3263H20.1328C19.9956 24.3261 19.8641 24.2715 19.7672 24.1745C19.6702 24.0775 19.6157 23.946 19.6156 23.8089V16.1518ZM20.3755 22.5688C20.6137 22.5691 20.8421 22.6638 21.0105 22.8323C21.1789 23.0008 21.2736 23.2291 21.2738 23.4673C21.2738 23.5415 21.3033 23.6126 21.3557 23.6651C21.4082 23.7175 21.4793 23.747 21.5535 23.747H31.531C31.6052 23.747 31.6763 23.7175 31.7288 23.6651C31.7812 23.6126 31.8107 23.5415 31.8107 23.4673C31.8109 23.2291 31.9057 23.0007 32.0741 22.8323C32.2426 22.6638 32.471 22.5691 32.7092 22.5688C32.7459 22.5688 32.7822 22.5616 32.8161 22.5475C32.85 22.5335 32.8808 22.5129 32.9068 22.487C32.9327 22.461 32.9533 22.4302 32.9673 22.3963C32.9814 22.3624 32.9886 22.3261 32.9886 22.2894V17.6692C32.9886 17.6325 32.9814 17.5961 32.9674 17.5622C32.9534 17.5283 32.9328 17.4974 32.9069 17.4715C32.8809 17.4455 32.8501 17.4249 32.8162 17.4108C32.7823 17.3968 32.7459 17.3895 32.7092 17.3895C32.471 17.3893 32.2426 17.2946 32.0742 17.1262C31.9057 16.9578 31.8109 16.7295 31.8107 16.4913C31.8107 16.4171 31.7812 16.346 31.7288 16.2935C31.6763 16.2411 31.6052 16.2116 31.531 16.2116H21.5535C21.4793 16.2116 21.4082 16.2411 21.3557 16.2935C21.3033 16.346 21.2738 16.4171 21.2738 16.4913C21.2736 16.7294 21.1789 16.9578 21.0105 17.1262C20.8421 17.2946 20.6137 17.3893 20.3755 17.3895C20.3387 17.3894 20.3023 17.3965 20.2682 17.4105C20.2341 17.4245 20.2032 17.4451 20.1771 17.4711C20.151 17.4971 20.1303 17.5279 20.1162 17.5619C20.1021 17.5959 20.0948 17.6324 20.0948 17.6692V22.2894C20.0948 22.3262 20.1021 22.3626 20.1162 22.3966C20.1304 22.4306 20.151 22.4615 20.1771 22.4874C20.2032 22.5134 20.2342 22.534 20.2682 22.5479C20.3023 22.5619 20.3387 22.569 20.3755 22.5688ZM20.655 17.9218C20.9393 17.8657 21.2006 17.7263 21.4056 17.5213C21.6105 17.3163 21.75 17.0551 21.8061 16.7707H31.2794C31.3356 17.0551 31.475 17.3163 31.6799 17.5213C31.8849 17.7263 32.1462 17.8657 32.4306 17.9218V22.0368C32.1462 22.0929 31.8849 22.2323 31.6799 22.4373C31.4749 22.6422 31.3355 22.9035 31.2794 23.1879H21.8061C21.75 22.9035 21.6106 22.6422 21.4056 22.4373C21.2006 22.2323 20.9393 22.0929 20.655 22.0368V17.9218ZM25.4969 19.3773C25.5102 19.1701 25.5932 18.9735 25.7323 18.8194C25.8713 18.6652 26.0584 18.5625 26.2631 18.5279V18.4326C26.2631 18.3584 26.2926 18.2872 26.345 18.2348C26.3975 18.1824 26.4686 18.1529 26.5428 18.1529C26.6169 18.1529 26.6881 18.1824 26.7405 18.2348C26.793 18.2872 26.8224 18.3584 26.8224 18.4326V18.5277C27.0503 18.5765 27.2556 18.6996 27.4062 18.8775C27.4505 18.9353 27.4706 19.0081 27.4621 19.0805C27.4536 19.1528 27.4172 19.219 27.3606 19.2649C27.3041 19.3108 27.2318 19.3329 27.1593 19.3263C27.0867 19.3198 27.0196 19.2852 26.9721 19.23C26.9173 19.1717 26.8506 19.1259 26.7765 19.0957C26.7024 19.0655 26.6227 19.0515 26.5428 19.0548C26.2828 19.0548 26.0562 19.2055 26.0562 19.3773C26.0562 19.5491 26.2836 19.6996 26.5428 19.6996C27.1195 19.6996 27.5886 20.0952 27.5886 20.5813C27.5753 20.7884 27.4923 20.9851 27.3533 21.1392C27.2142 21.2934 27.0271 21.3961 26.8224 21.4307V21.526C26.8224 21.6002 26.793 21.6713 26.7405 21.7238C26.6881 21.7762 26.6169 21.8057 26.5428 21.8057C26.4686 21.8057 26.3975 21.7762 26.345 21.7238C26.2926 21.6713 26.2631 21.6002 26.2631 21.526V21.4309C26.0352 21.3819 25.83 21.2589 25.6793 21.0811C25.6556 21.0526 25.6378 21.0198 25.6269 20.9844C25.6159 20.949 25.6122 20.9118 25.6157 20.875C25.6193 20.8381 25.6302 20.8023 25.6477 20.7697C25.6652 20.7371 25.689 20.7083 25.7177 20.6849C25.7465 20.6616 25.7796 20.6441 25.8151 20.6337C25.8506 20.6232 25.8878 20.6199 25.9246 20.624C25.9614 20.628 25.9971 20.6393 26.0295 20.6572C26.0619 20.6752 26.0904 20.6993 26.1134 20.7284C26.1682 20.7867 26.2349 20.8325 26.309 20.8628C26.3831 20.8931 26.4628 20.9071 26.5428 20.9038C26.8027 20.9038 27.0296 20.7531 27.0296 20.5813C27.0296 20.4095 26.8022 20.2584 26.5428 20.2584C25.966 20.2584 25.4969 19.8634 25.4969 19.3773ZM26.5428 22.5309C27.0474 22.5309 27.5407 22.3812 27.9603 22.1008C28.3799 21.8205 28.707 21.422 28.9001 20.9557C29.0932 20.4895 29.1437 19.9765 29.0453 19.4815C28.9468 18.9866 28.7038 18.5319 28.347 18.1751C27.9901 17.8182 27.5355 17.5752 27.0405 17.4768C26.5456 17.3783 26.0326 17.4288 25.5663 17.622C25.1001 17.8151 24.7016 18.1421 24.4212 18.5617C24.1408 18.9813 23.9912 19.4746 23.9912 19.9793C23.992 20.6558 24.261 21.3043 24.7394 21.7827C25.2177 22.261 25.8663 22.5301 26.5428 22.5309ZM26.5428 17.9868C26.9368 17.9868 27.3221 18.1037 27.6497 18.3226C27.9774 18.5415 28.2328 18.8527 28.3836 19.2168C28.5344 19.5809 28.5738 19.9815 28.497 20.368C28.4201 20.7545 28.2303 21.1095 27.9517 21.3882C27.673 21.6669 27.318 21.8566 26.9315 21.9335C26.545 22.0104 26.1443 21.9709 25.7803 21.8201C25.4162 21.6693 25.105 21.4139 24.8861 21.0863C24.6671 20.7586 24.5503 20.3734 24.5503 19.9793C24.5509 19.451 24.761 18.9446 25.1345 18.5711C25.5081 18.1975 26.0145 17.9874 26.5428 17.9868ZM29.7636 19.9793C29.7636 19.9051 29.7931 19.834 29.8455 19.7815C29.898 19.7291 29.9691 19.6996 30.0433 19.6996H31.6716C31.7458 19.6996 31.8169 19.7291 31.8694 19.7815C31.9218 19.834 31.9513 19.9051 31.9513 19.9793C31.9513 20.0535 31.9218 20.1246 31.8694 20.1771C31.8169 20.2295 31.7458 20.259 31.6716 20.259H30.0422C29.9682 20.2587 29.8974 20.2291 29.8451 20.1767C29.7929 20.1243 29.7636 20.0533 29.7636 19.9793ZM21.4149 20.2584C21.3408 20.2584 21.2696 20.229 21.2172 20.1765C21.1647 20.1241 21.1353 20.053 21.1353 19.9788C21.1353 19.9046 21.1647 19.8335 21.2172 19.781C21.2696 19.7286 21.3408 19.6991 21.4149 19.6991H23.0433C23.1175 19.6991 23.1886 19.7286 23.241 19.781C23.2935 19.8335 23.323 19.9046 23.323 19.9788C23.323 20.053 23.2935 20.1241 23.241 20.1765C23.1886 20.229 23.1175 20.2584 23.0433 20.2584H21.4149Z"
                  fill="black"
                />
              </svg>
            }
          />
          <Card
            data={payOut}
            currency={CurrencySymbol}
            firstText={"Payouts"}
            img={
              <svg
                width="50"
                height="50"
                viewBox="0 0 50 50"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <rect width="50" height="50" rx="10" fill="#FFFBF1" />
                <path
                  d="M34.725 26.3198H15.2745C15.123 26.3198 15 26.4426 15 26.5943V28.529C15 28.6807 15.123 28.8035 15.2745 28.8035H34.725C34.8766 28.8035 34.9996 28.6807 34.9996 28.529V26.5943C34.9996 26.4426 34.8766 26.3198 34.725 26.3198ZM34.4505 28.2544H15.5491V26.8686H34.4507L34.4505 28.2544ZM25.635 30.3003C25.5033 30.0697 25.2658 29.9323 24.9999 29.9323C24.7338 29.9323 24.4963 30.0699 24.365 30.3003L22.3061 33.9073C22.1754 34.1364 22.1763 34.4091 22.3084 34.6365C22.4405 34.8641 22.6772 35 22.9414 35H27.059C27.3232 35 27.5599 34.8639 27.6922 34.6363C27.8243 34.4089 27.825 34.1362 27.6941 33.9073L25.6354 30.3003H25.635ZM27.2169 34.3609C27.2011 34.3879 27.1542 34.4511 27.0586 34.4511H22.9409C22.8454 34.4511 22.7985 34.3879 22.7829 34.3609C22.767 34.3338 22.7357 34.262 22.7829 34.1795L24.8418 30.5725C24.8887 30.4903 24.968 30.4814 24.9999 30.4814C25.0318 30.4814 25.1115 30.4903 25.1584 30.5727L27.2171 34.1798C27.2643 34.2622 27.2326 34.3338 27.2169 34.3609ZM18.6802 20.1026C18.5287 20.1026 18.4056 19.9796 18.4056 19.828V19.5214C18.0981 19.4379 17.8511 19.2168 17.7543 18.9199C17.7074 18.7757 17.786 18.6208 17.9301 18.5737C18.0738 18.527 18.2292 18.6052 18.2763 18.7495C18.3243 18.8966 18.4809 19.001 18.6614 19.0082C18.6741 19.0074 18.687 19.0074 18.6998 19.0082C18.9226 19 19.1008 18.8459 19.1008 18.6576C19.1008 18.4638 18.9125 18.3063 18.6812 18.3063C18.1472 18.3063 17.7126 17.9024 17.7126 17.4062C17.7126 16.9985 18.006 16.6534 18.4067 16.543V16.2349C18.4067 16.0834 18.5297 15.9604 18.6812 15.9604C18.8328 15.9604 18.9558 16.0834 18.9558 16.2349V16.5435C19.2656 16.6295 19.5184 16.8569 19.6114 17.1543C19.6566 17.299 19.5761 17.4529 19.4311 17.4981C19.2865 17.5427 19.1325 17.4628 19.0872 17.3178C19.0388 17.1631 18.8719 17.0551 18.6812 17.0551C18.4498 17.0551 18.2617 17.2126 18.2617 17.4062C18.2617 17.5998 18.45 17.7572 18.6812 17.7572C19.2153 17.7572 19.6499 18.1611 19.6499 18.6576C19.6499 19.0655 19.3561 19.411 18.9547 19.5209V19.8278C18.9547 19.9793 18.8317 20.1026 18.6802 20.1026ZM15.2745 25.1914H21.7153C21.8669 25.1914 21.9899 25.0684 21.9899 24.9168V22.8526V20.7884C21.9899 20.6368 21.8669 20.5138 21.7153 20.5138H20.4156C21.1982 19.9652 21.7122 19.0579 21.7122 18.0314C21.7124 16.36 20.3524 15.0002 18.681 15.0002C17.0097 15.0002 15.6499 16.36 15.6499 18.0314C15.6499 19.0577 16.1639 19.965 16.9465 20.5138H15.2745C15.123 20.5138 15 20.6368 15 20.7884V22.8526V24.9168C15 25.0684 15.123 25.1914 15.2745 25.1914ZM21.4408 24.6423H15.5491V23.1271H21.4408V24.6423ZM16.199 18.0314C16.199 16.6627 17.3126 15.5491 18.6812 15.5491C20.0499 15.5491 21.1635 16.6627 21.1635 18.0314C21.1635 19.4 20.0512 20.5126 18.6834 20.5138H18.6793C17.3115 20.5128 16.1992 19.3996 16.1992 18.0314H16.199ZM15.5491 21.0627H18.6791C18.6791 21.0627 18.6804 21.0627 18.6812 21.0627C18.6821 21.0627 18.6825 21.0627 18.6834 21.0627H21.441V22.5779H15.5491V21.0627ZM31.6899 20.1026C31.5383 20.1026 31.4153 19.9796 31.4153 19.828V19.5211C31.1083 19.4377 30.8612 19.2168 30.764 18.9201C30.7168 18.7759 30.7952 18.6208 30.9394 18.5737C31.0839 18.5263 31.2387 18.6052 31.2858 18.7491C31.334 18.8964 31.4908 19.0008 31.6709 19.008C31.6838 19.0069 31.6966 19.0071 31.7093 19.008C31.9323 18.9997 32.1105 18.8457 32.1105 18.6574C32.1105 18.4636 31.9221 18.3061 31.6905 18.3061C31.1564 18.3061 30.7219 17.9022 30.7219 17.406C30.7219 16.9983 31.0153 16.6532 31.416 16.5428V16.2347C31.416 16.0832 31.539 15.9602 31.6905 15.9602C31.842 15.9602 31.9651 16.0832 31.9651 16.2347V16.5433C32.2751 16.6291 32.5281 16.8567 32.6211 17.1541C32.6663 17.2988 32.5858 17.4527 32.4408 17.4979C32.2964 17.5425 32.1422 17.4626 32.0969 17.3176C32.0485 17.1629 31.8814 17.0549 31.6905 17.0549C31.4591 17.0549 31.271 17.2124 31.271 17.406C31.271 17.5996 31.4593 17.757 31.6905 17.757C32.2248 17.757 32.6593 18.1609 32.6593 18.6574C32.6593 19.0655 32.3656 19.4108 31.964 19.5207V19.8276C31.964 19.9791 31.841 20.1021 31.6895 20.1021L31.6899 20.1026ZM34.9998 20.7882C34.9998 20.6366 34.8768 20.5136 34.7252 20.5136H33.4255C34.2081 19.965 34.7221 19.0577 34.7221 18.0311C34.7221 16.3598 33.3623 15 31.6907 15C30.0192 15 28.6596 16.3598 28.6596 18.0311C28.6596 19.0574 29.1736 19.9648 29.9562 20.5136H28.2847C28.1331 20.5136 28.0101 20.6366 28.0101 20.7882V22.8524V24.9166C28.0101 25.0682 28.1331 25.1912 28.2847 25.1912H34.7255C34.877 25.1912 35 25.0682 35 24.9166V22.8524L34.9998 20.7882ZM29.2087 18.0314C29.2087 16.6627 30.3223 15.5491 31.6909 15.5491C33.0596 15.5491 34.1732 16.6627 34.1732 18.0314C34.1732 19.4 33.0607 20.5126 31.693 20.5138H31.689C30.3212 20.5128 29.2087 19.3996 29.2087 18.0314ZM28.5592 21.0627H31.6888C31.6888 21.0627 31.6901 21.0627 31.6909 21.0627C31.6918 21.0627 31.6922 21.0627 31.693 21.0627H34.4509V22.5779H28.5592V21.0627ZM34.4509 24.6423H28.5592V23.1271H34.4509V24.6423Z"
                  fill="black"
                />
              </svg>
            }
          />
          <Card
            trans={true}
            data={transaction}
            firstText={"Transactions"}
            img={
              <svg
                width="50"
                height="50"
                viewBox="0 0 50 50"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <rect width="50" height="50" rx="10" fill="#F2FBFF" />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M26.2681 16.9283C29.003 16.9283 31.2204 19.1457 31.2204 21.8806C31.2204 24.6155 29.003 26.8329 26.2681 26.8329C23.5332 26.8329 21.3157 24.6155 21.3157 21.8806C21.3157 19.1457 23.5323 16.9283 26.2681 16.9283ZM24.3993 27.4172C24.3925 27.4138 24.3857 27.4104 24.3788 27.4078C21.1443 26.1085 19.6583 26.6388 17.9096 27.3916L17.8466 26.9739C17.7971 26.6431 17.4893 26.4163 17.1586 26.4666L15.514 26.7172C15.1858 26.7675 14.9573 27.0762 15.0067 27.4044L16.0724 34.4856C16.1219 34.8163 16.4296 35.044 16.7604 34.9928L18.405 34.743C18.7332 34.6927 18.9617 34.3841 18.9122 34.0559L18.8321 33.5247C19.035 33.4617 19.3129 33.3866 19.4971 33.3645C19.972 33.3082 20.9873 33.5017 22.134 33.72C23.1033 33.905 24.1596 34.1062 25.1256 34.2017C25.6414 34.2434 26.4947 34.2059 27.4659 34.0508C28.2715 33.9229 29.1607 33.714 30.0089 33.4037C30.6859 33.1565 32.3765 32.5128 33.6817 31.7097C35.0867 30.8461 36.0578 29.7932 35.0679 28.7762C35.0594 28.7668 35.05 28.7574 35.0406 28.7497C34.6988 28.4786 34.3151 28.4522 33.8658 28.5937C33.4617 28.7208 33.0056 28.9868 32.4753 29.3286C32.1701 29.5256 31.5878 29.8001 31.0652 30.0175C31.1897 29.8299 31.2511 29.6296 31.2281 29.4147C31.1036 28.2834 29.3712 28.8947 28.4668 28.789C28.0959 28.7455 27.783 28.7011 27.5128 28.6542C30.7549 28.072 33.1703 25.2382 33.1703 21.8817C33.1703 18.0811 30.0892 15 26.2886 15C23.1556 15 20.4427 17.1118 19.6422 20.094L18.9098 20.013C18.7538 19.9959 18.6259 20.1545 18.7001 20.3131L19.4248 21.9653C19.4896 22.1137 19.6908 22.1316 19.7837 22.0054L20.8579 20.5433C20.9534 20.4128 20.8681 20.2304 20.713 20.2134L20.0608 20.1409C20.435 18.8007 21.2296 17.636 22.2952 16.7981C24.8664 14.7759 28.5462 14.9993 30.859 17.3114C33.3833 19.8357 33.3833 23.9288 30.859 26.4533C29.6978 27.6144 28.0959 28.3366 26.3259 28.3459C26.0028 28.2232 25.7172 28.0774 25.3582 27.8932C25.0914 27.7551 24.7853 27.5991 24.3991 27.4175L24.3993 27.4172ZM29.9894 30.8503C29.1036 31.2945 27.9535 31.5894 27.4419 31.6534C26.1256 31.8154 24.7393 31.2859 23.7718 30.9168C23.4325 30.7872 23.1461 30.6781 22.9491 30.6312C22.6814 30.569 22.7769 30.1623 23.0438 30.2254C23.2705 30.2782 23.5672 30.3916 23.921 30.5272C24.8486 30.881 26.1777 31.3891 27.3917 31.239C27.9356 31.1717 29.1547 30.8452 29.9902 30.3797C30.4889 30.1018 30.8504 29.782 30.8146 29.4598C30.7481 28.8613 29.2254 29.297 28.4197 29.2032C26.5901 28.9892 26.1254 28.7513 25.1688 28.262C24.9062 28.1273 24.6044 27.973 24.2225 27.7939C21.0869 26.5347 19.6776 27.0803 17.9733 27.8169L18.7696 33.1087C18.9793 33.0464 19.2641 32.9723 19.4482 32.9501C19.9845 32.8862 21.0305 33.0856 22.2104 33.3107C23.1823 33.4957 24.1218 33.6705 25.0987 33.7805C25.5762 33.829 26.4227 33.7958 27.4015 33.6398C28.1833 33.5153 29.0461 33.3133 29.868 33.0123C30.5313 32.7693 32.1878 32.1393 33.4641 31.3541C34.6321 30.6354 35.4735 29.794 34.7728 29.0684C34.5579 28.9038 34.3004 28.8936 33.991 28.9908C33.6312 29.1033 33.2049 29.354 32.7011 29.6779C32.0906 30.0718 30.7479 30.626 29.9891 30.8502L29.9894 30.8503ZM17.2208 26.8792C17.3265 26.863 17.4186 26.9321 17.4339 27.0361L18.4996 34.1172C18.5149 34.2187 18.4459 34.3142 18.3436 34.3304L16.699 34.5802C16.5933 34.5964 16.5012 34.5273 16.4859 34.4233L15.4194 27.3421C15.404 27.2407 15.4731 27.1452 15.5754 27.129L17.2208 26.8792ZM19.6617 21.4672L19.2227 20.4663L20.3088 20.5866L19.6617 21.4672ZM26.2682 22.0887H26.2784V22.0896C26.853 22.0896 27.3671 22.4988 27.3688 23.0632H27.368C27.368 23.6293 26.8445 24.0368 26.2682 24.0368C25.691 24.0368 25.1727 23.6199 25.1675 23.0623C25.165 22.7878 24.7489 22.7921 24.7515 23.0658C24.7575 23.7759 25.3355 24.3369 26.0337 24.4384L26.0278 25.169C26.0252 25.4427 26.4412 25.4461 26.4438 25.1724L26.4498 24.4452C27.1736 24.3659 27.7857 23.7998 27.7857 23.0649H27.7848C27.7823 22.2661 27.0815 21.6744 26.2784 21.6744V21.6753H26.2579V21.6744C25.6833 21.6744 25.1692 21.2652 25.1675 20.7008H25.1684C25.1684 20.1347 25.6918 19.7272 26.2682 19.7272C26.8454 19.7272 27.3637 20.1441 27.3688 20.7017C27.3714 20.9762 27.7874 20.9719 27.7849 20.6983C27.7789 19.9881 27.2009 19.4271 26.5026 19.3257L26.5086 18.595C26.5112 18.3214 26.0951 18.318 26.0926 18.5916L26.0866 19.3188C25.3619 19.3981 24.7507 19.9642 24.7507 20.6999H24.7515C24.7541 21.4996 25.4549 22.0904 26.258 22.0904V22.0896L26.2682 22.0887ZM29.4745 18.6742C27.7038 16.9035 24.8317 16.9035 23.0608 18.6742C21.2899 20.4449 21.29 23.3164 23.0608 25.088C24.8315 26.8587 27.7036 26.8587 29.4745 25.088C31.2453 23.3164 31.2453 20.4451 29.4745 18.6742Z"
                  fill="black"
                />
              </svg>
            }
          />
        </div>
        <div className="flex md:flex-row flex-col mt-5 gap-8">
          <div className="w-full p-3 overflow-hidden overflow-x-auto bg-containerWhite rounded-lg">
            <div className="flex items-center justify-between">
              <p className="font-bold text-xs text-textColor">
                Revenue Statitics
              </p>
              <div
                className="flex relative gap-1 text-xs items-center max-w-[130px] cursor-pointer  p-1 px-2 rounded-xl"
                onClick={() => setDrp1(!drop1)}
              >
                <p>{graphstatekey}</p>
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M3.70711 6.70711L7.29289 10.2929C7.68342 10.6834 8.31658 10.6834 8.70711 10.2929L12.2929 6.70711C12.9229 6.07714 12.4767 5 11.5858 5H4.41421C3.52331 5 3.07714 6.07714 3.70711 6.70711Z"
                    fill="black"
                  />
                </svg>
                {drop1 && (
                  <div className="text-center absolute w-full top-7 rounded-md left-0 bg-containerWhite">
                    <p
                      className="p-1 cursor-pointer"
                      onClick={() => {
                        setGraphkey("currentYear");
                        setstateGraphkey("Current Year");
                      }}
                    >
                      Current Year
                    </p>
                    <p
                      className="p-1 cursor-pointer"
                      onClick={() => {
                        setstateGraphkey("Current Year");
                        setGraphkey("lastYear");
                      }}
                    >
                      Last Year
                    </p>
                  </div>
                )}
              </div>
            </div>
            {/* Chart */}
            <div className="mt-14">
              <LineChart data={graphData} />
            </div>
            {/* Chart */}
          </div>
        </div>
        {/* section-3 */}
        <div>
          <ThirdSection />
        </div>
        {/* section-3 */}

        <div
          className="bg-containerWhite overflow-x-auto p-4 rounded-lg w-full mt-4"
          style={{ scrollbarWidth: "none" }}
        >
          <div className="flex gap-10 items-center">
            <Button
              bordercolur={border}
              cliked={handliSubmit}
              img={
                <svg
                  width="18"
                  height="15"
                  viewBox="0 0 18 15"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.9424 4.05659C13.3546 4.05105 12.7618 4.21314 12.2175 4.48907L12.2075 4.49416L13.9382 4.55657M13.9424 4.05659C13.9426 4.05659 13.9428 4.05659 13.943 4.05659L13.9382 4.55657M13.9424 4.05659C13.9422 4.05658 13.942 4.05658 13.9418 4.05658L13.9382 4.55657M13.9424 4.05659C15.512 4.0682 16.5011 5.27837 16.9167 6.59169C17.332 7.9038 17.2511 9.51358 16.5175 10.6309M13.9382 4.55657C16.4657 4.57478 17.3619 8.4343 16.0993 10.3567M16.5175 10.6309C16.5176 10.6307 16.5177 10.6306 16.5177 10.6305L16.0993 10.3567M16.5175 10.6309C15.9467 11.503 14.9662 12.3931 13.9731 12.6663L13.908 12.6842H13.8405H13.7748M16.5175 10.6309C16.5174 10.631 16.5173 10.6311 16.5173 10.6312L16.0993 10.3567M16.0993 10.3567L13.7748 12.6842M13.7748 12.6842C13.7785 12.5175 13.7757 12.3507 13.7662 12.1842H13.8405L13.7748 12.6842ZM13.7748 12.6842C13.7732 12.7547 13.7705 12.8252 13.7665 12.8956M13.7748 12.6842H13.2747C13.273 12.7547 13.27 12.8252 13.2657 12.8956H13.7665M12.2046 3.72679C12.1828 3.7374 12.161 3.74815 12.1393 3.75902L12.2046 3.72679ZM12.2046 3.72679L11.9858 3.27719C11.9776 3.28123 11.9693 3.28528 11.961 3.28935C12.048 3.42858 12.1294 3.57443 12.2046 3.72679ZM3.64604 5.14875C3.64602 5.14887 3.646 5.14898 3.64598 5.14909L3.63372 5.22218L3.61189 5.2266C3.61169 5.22664 3.61149 5.22668 3.61129 5.22672C3.22887 5.30313 2.87772 5.41054 2.56229 5.55144C0.505315 6.46207 0.00427652 9.02757 1.18955 10.8994L1.19025 10.9005C1.42352 11.2668 1.70518 11.6635 2.04209 11.9886C2.37904 12.3137 2.80096 12.5959 3.31565 12.6779L3.35475 12.6842H3.39433H3.94064C3.94221 12.755 3.94495 12.8254 3.94886 12.8956H3.4026L3.37272 12.8926C2.54743 12.7677 1.78757 12.0367 1.17974 11.0743L1.17903 11.0732C-0.150428 8.98053 0.544107 6.24332 2.58965 5.3363L2.59068 5.33584C2.81179 5.2372 3.05124 5.15356 3.30678 5.08578L3.60135 5.00765L3.66689 4.71004C3.96267 3.36709 4.58697 2.35539 5.37035 1.66164L5.3704 1.66159C7.7606 -0.455698 11.3874 0.403656 12.798 3.60909L12.9567 3.96974L13.3444 3.89975C13.5463 3.86331 13.7448 3.84559 13.9385 3.84828L13.9412 3.8483C15.3648 3.86031 16.4196 4.90069 16.924 6.37593C17.4298 7.855 17.3158 9.61318 16.53 10.806C15.8704 11.8064 14.8823 12.6217 13.9177 12.8884L13.8652 12.8956H13.7665M5.684 2.24537L5.3526 1.87097C5.35241 1.87114 5.35222 1.87131 5.35203 1.87147L5.684 2.24537Z"
                    fill={border === "Cloud" ? "yellow" : "white"}
                    stroke={border === "Cloud" ? "yellow" : "white"}
                  />
                </svg>
              }
              name={"Cloud"}
            />

            <Button
              bordercolur={border}
              cliked={handliSubmit}
              img={
                <svg
                  width="20"
                  height="15"
                  viewBox="0 0 20 15"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M19.1238 12.3486H17.9927V6.04454C18.4007 5.76641 18.6602 5.30288 18.6602 4.76517V3.17058C18.6602 3.1335 18.6417 3.09642 18.6232 3.05934L16.6392 0.0741664C16.6021 0.0185404 16.5465 0 16.4909 0H3.90108C3.84545 0 3.78983 0.0370832 3.75274 0.0741664L1.75025 3.05934C1.73171 3.09642 1.71317 3.1335 1.71317 3.17058V4.76517C1.71317 5.28434 1.97276 5.76643 2.38067 6.04454V12.3486H1.24963C0.971504 12.3486 0.730469 12.5711 0.730469 12.8677V14.0729C0.730469 14.5921 1.1384 15 1.65754 15H18.7158C19.235 15 19.6429 14.5921 19.6429 14.0729V12.8677C19.6429 12.5711 19.4204 12.3486 19.1238 12.3486ZM17.0842 5.95174C16.4167 5.95174 15.8975 5.41404 15.8975 4.76508V3.35592H18.2894V4.76508C18.2708 5.41404 17.7517 5.95174 17.0842 5.95174ZM3.86404 6.21134C4.19778 6.08154 4.49444 5.82197 4.66134 5.48821C4.92093 5.98884 5.44007 6.32257 6.0334 6.32257C6.62674 6.32257 7.1459 5.98884 7.40547 5.48821C7.66507 5.98884 8.18421 6.32257 8.77754 6.32257C9.37087 6.32257 9.89003 5.98884 10.1496 5.48821C10.4092 5.98884 10.9283 6.32257 11.5217 6.32257C12.115 6.32257 12.6342 5.98884 12.8937 5.48821C13.1533 5.98884 13.6725 6.32257 14.2658 6.32257C14.8591 6.32257 15.3783 5.98884 15.6379 5.48821C15.8047 5.80341 16.1014 6.063 16.4352 6.21134V11.2361H3.8639L3.86404 6.21134ZM4.84674 3.33748H7.23858V4.74664C7.23858 5.41414 6.70088 5.9333 6.05192 5.9333C5.40295 5.9333 4.86525 5.3956 4.86525 4.74664V3.33748H4.84674ZM13.1349 3.33748H15.5267V4.74664C15.5267 5.41414 14.989 5.9333 14.34 5.9333C13.6911 5.9333 13.1534 5.3956 13.1534 4.74664V3.33748H13.1349ZM12.764 4.76517C12.764 5.43267 12.2263 5.95184 11.5774 5.95184C10.9284 5.95184 10.3722 5.41414 10.3722 4.76517V3.35601H12.764L12.764 4.76517ZM10.0012 4.76517C10.0012 5.43267 9.46355 5.95184 8.81459 5.95184C8.16562 5.95184 7.62792 5.41414 7.62792 4.76517V3.35601H10.0012V4.76517ZM3.99389 0.370725H16.3798L18.1227 2.98518H2.25111L3.99389 0.370725ZM2.10263 4.76517V3.35601H4.49447V4.76517C4.49447 5.43267 3.95677 5.95184 3.30781 5.95184C2.65884 5.95184 2.10263 5.41414 2.10263 4.76517ZM2.75159 6.22997C2.91847 6.28559 3.10389 6.32267 3.28929 6.32267C3.36346 6.32267 3.43763 6.32267 3.49325 6.30413V11.403C3.49325 11.5142 3.56742 11.5884 3.67867 11.5884H16.6764C16.7877 11.5884 16.8618 11.5142 16.8618 11.403V6.30413C16.936 6.32267 16.9916 6.32267 17.0658 6.32267C17.2512 6.32267 17.4366 6.28559 17.6035 6.22997V12.3486H12.8568C12.8012 12.3486 12.7456 12.3672 12.7085 12.4043L12.0966 12.9791H8.27702L7.66515 12.4043C7.62807 12.3672 7.59099 12.3486 7.53536 12.3486H2.75168L2.75159 6.22997ZM19.2721 14.0546C19.2721 14.3698 19.031 14.6108 18.7158 14.6108H1.65754C1.34234 14.6108 1.10128 14.3698 1.10128 14.0546V12.8494C1.10128 12.7752 1.1569 12.7011 1.24961 12.7011H7.46108L8.07295 13.2758C8.11003 13.3129 8.14711 13.3315 8.20274 13.3315H12.1707C12.2263 13.3315 12.2634 13.3129 12.3005 13.2758L12.9124 12.7011H19.1238C19.198 12.7011 19.2722 12.7567 19.2722 12.8494L19.2721 14.0546Z"
                    fill={border === "Orders" ? "yellow" : "white"}
                  />
                </svg>
              }
              name={"Orders"}
            />
            <Button
              bordercolur={border}
              cliked={handliSubmit}
              img={
                <svg
                  width="16"
                  height="15"
                  viewBox="0 0 16 15"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M4.53575 8.12734C4.45847 8.12743 4.38238 8.10843 4.31422 8.07201C4.24607 8.03559 4.18798 7.98288 4.14512 7.91859L3.20762 6.51234C3.1563 6.43534 3.12891 6.34487 3.12891 6.25234C3.12891 6.1598 3.1563 6.06933 3.20762 5.99234L4.14512 4.58609C4.17894 4.53413 4.22273 4.4894 4.27395 4.45448C4.32517 4.41956 4.38281 4.39515 4.44353 4.38266C4.50425 4.37017 4.56684 4.36985 4.62768 4.38171C4.68853 4.39357 4.74642 4.41739 4.798 4.45177C4.84958 4.48616 4.89382 4.53044 4.92818 4.58204C4.96253 4.63364 4.9863 4.69154 4.99813 4.7524C5.00995 4.81325 5.00958 4.87584 4.99705 4.93655C4.98452 4.99726 4.96007 5.05489 4.92512 5.10609L4.16075 6.25234L4.92512 7.39859C4.97215 7.46913 4.99916 7.55112 5.00328 7.6358C5.00741 7.72049 4.98848 7.80471 4.94852 7.87949C4.90857 7.95427 4.84908 8.01681 4.77639 8.06046C4.7037 8.1041 4.62053 8.12722 4.53575 8.12734ZM11.722 8.12734C11.6372 8.12722 11.554 8.1041 11.4814 8.06046C11.4087 8.01681 11.3492 7.95427 11.3092 7.87949C11.2693 7.80471 11.2503 7.72049 11.2545 7.6358C11.2586 7.55112 11.2856 7.46913 11.3326 7.39859L12.097 6.25234L11.3326 5.10609C11.2653 5.00264 11.2415 4.87681 11.2663 4.75592C11.2912 4.63502 11.3628 4.52882 11.4655 4.46035C11.5682 4.39188 11.6937 4.36669 11.8149 4.39023C11.936 4.41377 12.043 4.48415 12.1126 4.58609L13.0501 5.99234C13.1014 6.06933 13.1288 6.1598 13.1288 6.25234C13.1288 6.34487 13.1014 6.43534 13.0501 6.51234L12.1126 7.91859C12.0698 7.98288 12.0117 8.03559 11.9435 8.07201C11.8754 8.10843 11.7993 8.12743 11.722 8.12734ZM5.00387 12.6586C4.57325 12.6586 4.22262 12.308 4.22262 11.8773C4.22262 11.4467 4.57325 11.0961 5.00387 11.0961C5.4345 11.0961 5.78512 11.4467 5.78512 11.8773C5.78512 12.308 5.4345 12.6586 5.00387 12.6586ZM5.00387 11.7211C4.96243 11.7211 4.92269 11.7375 4.89339 11.7669C4.86408 11.7962 4.84762 11.8359 4.84762 11.8773C4.84762 12.0492 5.16012 12.0492 5.16012 11.8773C5.16012 11.8359 5.14366 11.7962 5.11436 11.7669C5.08506 11.7375 5.04531 11.7211 5.00387 11.7211ZM8.12887 12.6586C7.69825 12.6586 7.34762 12.308 7.34762 11.8773C7.34762 11.4467 7.69825 11.0961 8.12887 11.0961C8.5595 11.0961 8.91012 11.4467 8.91012 11.8773C8.91012 12.308 8.5595 12.6586 8.12887 12.6586ZM8.12887 11.7211C8.08743 11.7211 8.04769 11.7375 8.01839 11.7669C7.98908 11.7962 7.97262 11.8359 7.97262 11.8773C7.97262 12.0492 8.28512 12.0492 8.28512 11.8773C8.28512 11.8359 8.26866 11.7962 8.23936 11.7669C8.21005 11.7375 8.17031 11.7211 8.12887 11.7211ZM11.2539 12.6586C10.8232 12.6586 10.4726 12.308 10.4726 11.8773C10.4726 11.4467 10.8232 11.0961 11.2539 11.0961C11.6845 11.0961 12.0351 11.4467 12.0351 11.8773C12.0351 12.308 11.6845 12.6586 11.2539 12.6586ZM11.2539 11.7211C11.2124 11.7211 11.1727 11.7375 11.1434 11.7669C11.1141 11.7962 11.0976 11.8359 11.0976 11.8773C11.0976 12.0492 11.4101 12.0492 11.4101 11.8773C11.4101 11.8359 11.3937 11.7962 11.3644 11.7669C11.3351 11.7375 11.2953 11.7211 11.2539 11.7211Z"
                    fill={border === "Banner Section" ? "yellow" : "white"}
                  />
                  <path
                    d="M13.9258 15H2.36328C1.90754 14.9997 1.47056 14.8185 1.14831 14.4962C0.826051 14.174 0.644862 13.737 0.644531 13.2812L0.644531 1.71875C0.644862 1.26301 0.826051 0.826032 1.14831 0.503776C1.47056 0.181519 1.90754 0.000331086 2.36328 0L13.9258 0C14.3815 0.000331086 14.8185 0.181519 15.1408 0.503776C15.463 0.826032 15.6442 1.26301 15.6445 1.71875V13.2812C15.6442 13.737 15.463 14.174 15.1408 14.4962C14.8185 14.8185 14.3815 14.9997 13.9258 15ZM2.36328 0.9375C1.93266 0.9375 1.58203 1.28813 1.58203 1.71875V13.2812C1.58203 13.7119 1.93266 14.0625 2.36328 14.0625H13.9258C14.3564 14.0625 14.707 13.7119 14.707 13.2812V1.71875C14.707 1.28813 14.3564 0.9375 13.9258 0.9375H2.36328Z"
                    fill={border === "Banner Section" ? "yellow" : "white"}
                  />
                </svg>
              }
              name={"Banner Section"}
            />
          </div>

          {border === "Cloud" ? (
            <CloudTable data={cloudData} loading={loading} />
          ) : border === "Orders" ? (
            <OrederTable data={orderData} loading={loading} />
          ) : border === "Banner Section" ? (
            <BAnnerSection data={bannerData} loading={loading} />
          ) : (
            border === "Special deals" && (
              <SpecialDeals data={spesialDealsdata} loading={loading} />
            )
          )}
        </div>
        <div ref={loader} className="h-10"></div>
      </div>
    </UserContext.Provider>
  );
}

export default Adminrevenue;
